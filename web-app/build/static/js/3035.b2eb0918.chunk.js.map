{"version":3,"file":"static/js/3035.b2eb0918.chunk.js","mappings":"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","sources":["screens/Console/Watch/Watch.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Box,\n  Button,\n  DataTable,\n  Grid,\n  InputBox,\n  InputLabel,\n  PageLayout,\n  Select,\n} from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { Bucket, BucketList, EventInfo } from \"./types\";\nimport { niceBytes, timeFromDate } from \"../../../common/utils\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { watchMessageReceived, watchResetMessages } from \"./watchSlice\";\nimport { setHelpName } from \"../../../systemSlice\";\nimport api from \"../../../common/api\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst Watch = () => {\n  const dispatch = useAppDispatch();\n  const messages = useSelector((state: AppState) => state.watch.messages);\n\n  const [start, setStart] = useState(false);\n  const [bucketName, setBucketName] = useState(\"Select Bucket\");\n  const [prefix, setPrefix] = useState(\"\");\n  const [suffix, setSuffix] = useState(\"\");\n  const [bucketList, setBucketList] = useState<Bucket[]>([]);\n\n  const fetchBucketList = () => {\n    api\n      .invoke(\"GET\", `/api/v1/buckets`)\n      .then((res: BucketList) => {\n        let buckets: Bucket[] = [];\n        if (res.buckets !== null) {\n          buckets = res.buckets;\n        }\n        setBucketList(buckets);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        console.error(err);\n      });\n  };\n  useEffect(() => {\n    fetchBucketList();\n  }, []);\n\n  useEffect(() => {\n    dispatch(watchResetMessages());\n    // begin watch if bucketName in bucketList and start pressed\n    if (start && bucketList.some((bucket) => bucket.name === bucketName)) {\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      // check if we are using base path, if not this always is `/`\n      const baseLocation = new URL(document.baseURI);\n      const baseUrl = baseLocation.pathname;\n\n      const wsProt = wsProtocol(url.protocol);\n      const socket = new WebSocket(\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/watch/${bucketName}?prefix=${prefix}&suffix=${suffix}`,\n      );\n\n      let interval: any | null = null;\n      if (socket !== null) {\n        socket.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          socket.send(\"ok\");\n          interval = setInterval(() => {\n            socket.send(\"ok\");\n          }, 10 * 1000);\n        };\n        socket.onmessage = (message: MessageEvent) => {\n          let m: EventInfo = JSON.parse(message.data.toString());\n          m.Time = new Date(m.Time.toString());\n          m.key = Math.random();\n          dispatch(watchMessageReceived(m));\n        };\n        socket.onclose = () => {\n          clearInterval(interval);\n          console.log(\"connection closed by server\");\n          // reset start status\n          setStart(false);\n        };\n        return () => {\n          // close websocket on useEffect cleanup\n          socket.close(1000);\n          clearInterval(interval);\n          console.log(\"closing websockets\");\n        };\n      }\n    } else {\n      // reset start status\n      setStart(false);\n    }\n  }, [dispatch, start, bucketList, bucketName, prefix, suffix]);\n\n  const bucketNames = bucketList.map((bucketName) => ({\n    label: bucketName.name,\n    value: bucketName.name,\n  }));\n\n  useEffect(() => {\n    dispatch(setHelpName(\"watch\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const optionsArray = bucketNames.map((option) => ({\n    label: option.label,\n    value: option.value,\n  }));\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label=\"Watch\" actions={<HelpMenu />} />\n      <PageLayout>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              gap: 10,\n              marginBottom: 15,\n              alignItems: \"center\",\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }}>\n              <InputLabel>Bucket</InputLabel>\n              <Select\n                id=\"bucket-name\"\n                name=\"bucket-name\"\n                value={bucketName}\n                onChange={(value) => {\n                  setBucketName(value as string);\n                }}\n                disabled={start}\n                options={optionsArray}\n                placeholder={\"Select Bucket\"}\n              />\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n              <InputLabel>Prefix</InputLabel>\n              <InputBox\n                id=\"prefix-resource\"\n                disabled={start}\n                onChange={(e) => {\n                  setPrefix(e.target.value);\n                }}\n              />\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n              <InputLabel>Suffix</InputLabel>\n              <InputBox\n                id=\"suffix-resource\"\n                disabled={start}\n                onChange={(e) => {\n                  setSuffix(e.target.value);\n                }}\n              />\n            </Box>\n            <Box sx={{ alignSelf: \"flex-end\", paddingBottom: 4 }}>\n              {start ? (\n                <Button\n                  id={\"stop-watch\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  onClick={() => setStart(false)}\n                  label={\"Stop\"}\n                />\n              ) : (\n                <Button\n                  id={\"start-watch\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  onClick={() => setStart(true)}\n                  label={\"Start\"}\n                />\n              )}\n            </Box>\n          </Grid>\n\n          <Grid item xs={12}>\n            <DataTable\n              columns={[\n                {\n                  label: \"Time\",\n                  elementKey: \"Time\",\n                  renderFunction: timeFromDate,\n                },\n                {\n                  label: \"Size\",\n                  elementKey: \"Size\",\n                  renderFunction: niceBytes,\n                },\n                { label: \"Type\", elementKey: \"Type\" },\n                { label: \"Path\", elementKey: \"Path\" },\n              ]}\n              records={messages}\n              entityName={\"Watch\"}\n              customEmptyMessage={\"No Changes at this time\"}\n              idField={\"watch_table\"}\n              isLoading={false}\n              customPaperHeight={\"calc(100vh - 270px)\"}\n            />\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Watch;\n"],"names":["Watch","dispatch","useAppDispatch","messages","useSelector","state","watch","start","setStart","useState","bucketName","setBucketName","prefix","setPrefix","suffix","setSuffix","bucketList","setBucketList","useEffect","api","invoke","then","res","buckets","catch","err","console","error","watchResetMessages","some","bucket","name","url","URL","window","location","toString","port","process","baseUrl","document","baseURI","pathname","wsProt","wsProtocol","protocol","socket","WebSocket","concat","hostname","interval","onopen","log","send","setInterval","onmessage","message","m","JSON","parse","data","Time","Date","key","Math","random","watchMessageReceived","onclose","clearInterval","close","bucketNames","map","label","value","setHelpName","optionsArray","option","_jsxs","Fragment","children","_jsx","PageHeaderWrapper","actions","HelpMenu","PageLayout","Grid","container","item","xs","sx","display","gap","marginBottom","alignItems","Box","flexGrow","InputLabel","Select","id","onChange","disabled","options","placeholder","InputBox","e","target","alignSelf","paddingBottom","Button","type","variant","onClick","DataTable","columns","elementKey","renderFunction","timeFromDate","niceBytes","records","entityName","customEmptyMessage","idField","isLoading","customPaperHeight"],"sourceRoot":""}