{"version":3,"file":"static/js/8152.6306ebd5.chunk.js","mappings":"kNAmCA,MA0FA,EA1F8BA,IASE,IATD,2BAC7BC,EAA0B,WAC1BC,EAAU,eACVC,EAAc,aACdC,EAAY,cACZC,EAAa,eACbC,EAAc,YACdC,EAAW,oBACXC,GAAsB,GACER,EACxB,MAAMS,GAAWC,EAAAA,EAAAA,OACVC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAiB,KAO1DC,EAAeC,IAAmBC,EAAAA,EAAAA,IALpBC,IAAMhB,GAA2B,KAClCiB,GAClBT,GAASU,EAAAA,EAAAA,IAAqBD,MAKhC,IAAKf,EACH,OAAO,KAqBT,OACEiB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MACEd,EACI,oCACA,0BAENe,YAAa,SACbC,OAAQtB,EACRuB,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IAC7BC,UAAWb,EACXc,UA7BoBC,KACtB,IAAIC,EAAG,mBAAAC,OAAsB5B,EAAc,iBAAA4B,OAAgB3B,GAE3D,GAAII,EAAqB,CACvB,IAAID,EAKF,OAFAuB,EAAG,mBAAAC,OAAsB5B,EAAc,2CACvCY,EAAgB,SAAUe,EAAK,CAAEE,MAAO3B,IAHxCyB,EAAG,mBAAAC,OAAsB5B,EAAc,gCAM3C,MAA8B,IAAnBG,IACTwB,EAAG,mBAAAC,OAAsB5B,EAAc,kCAGzCY,EAAgB,SAAUe,EAAI,EAe5BG,QAtCYA,IAAMhC,GAA2B,GAuC7CiC,mBAAoB,CAClBC,SAAU3B,GAA4C,mBAArBG,GAEnCyB,qBACEhB,EAAAA,EAAAA,KAACiB,EAAAA,SAAQ,CAAAC,SACN9B,GACC+B,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CAAC,8EAEDlB,EAAAA,EAAAA,KAAA,KAAAkB,SAAInC,IAAmB,KAACiB,EAAAA,EAAAA,KAAA,UAC/BA,EAAAA,EAAAA,KAAA,SAAM,4BACkBA,EAAAA,EAAAA,KAAA,KAAAkB,SAAG,mBAAkB,gBAC7ClB,EAAAA,EAAAA,KAACoB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGJ,UAChBlB,EAAAA,EAAAA,KAACuB,EAAAA,IAAQ,CACPC,GAAG,gBACHC,KAAK,gBACLC,SAAWC,IACTnC,EAAoBmC,EAAMC,OAAOC,MAAM,EAEzCC,MAAM,GACND,MAAOtC,UAKb4B,EAAAA,EAAAA,MAACF,EAAAA,SAAQ,CAAAC,SAAA,CAAC,mDACyC,KACjDlB,EAAAA,EAAAA,KAAA,KAAAkB,SAAIlC,IAAiB,UAK7B,C","sources":["screens/Console/Buckets/BucketDetails/DeleteReplicationRule.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { ConfirmDeleteIcon, Grid, InputBox } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteReplicationProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedBucket: string;\n  ruleToDelete?: string;\n  rulesToDelete?: string[];\n  remainingRules: number;\n  allSelected: boolean;\n  deleteSelectedRules?: boolean;\n}\n\nconst DeleteReplicationRule = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedBucket,\n  ruleToDelete,\n  rulesToDelete,\n  remainingRules,\n  allSelected,\n  deleteSelectedRules = false,\n}: IDeleteReplicationProps) => {\n  const dispatch = useAppDispatch();\n  const [confirmationText, setConfirmationText] = useState<string>(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedBucket) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    let url = `/api/v1/buckets/${selectedBucket}/replication/${ruleToDelete}`;\n\n    if (deleteSelectedRules) {\n      if (allSelected) {\n        url = `/api/v1/buckets/${selectedBucket}/delete-all-replication-rules`;\n      } else {\n        url = `/api/v1/buckets/${selectedBucket}/delete-selected-replication-rules`;\n        invokeDeleteApi(\"DELETE\", url, { rules: rulesToDelete });\n        return;\n      }\n    } else if (remainingRules === 1) {\n      url = `/api/v1/buckets/${selectedBucket}/delete-all-replication-rules`;\n    }\n\n    invokeDeleteApi(\"DELETE\", url);\n  };\n\n  return (\n    <ConfirmDialog\n      title={\n        deleteSelectedRules\n          ? \"Delete Selected Replication Rules\"\n          : \"Delete Replication Rule\"\n      }\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteSelectedRules && confirmationText !== \"Yes, I am sure\",\n      }}\n      confirmationContent={\n        <Fragment>\n          {deleteSelectedRules ? (\n            <Fragment>\n              Are you sure you want to remove the selected replication rules for\n              bucket <b>{selectedBucket}</b>?<br />\n              <br />\n              To continue please type <b>Yes, I am sure</b> in the box.\n              <Grid item xs={12}>\n                <InputBox\n                  id=\"retype-tenant\"\n                  name=\"retype-tenant\"\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setConfirmationText(event.target.value);\n                  }}\n                  label=\"\"\n                  value={confirmationText}\n                />\n              </Grid>\n            </Fragment>\n          ) : (\n            <Fragment>\n              Are you sure you want to delete replication rule{\" \"}\n              <b>{ruleToDelete}</b>?\n            </Fragment>\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteReplicationRule;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","selectedBucket","ruleToDelete","rulesToDelete","remainingRules","allSelected","deleteSelectedRules","dispatch","useAppDispatch","confirmationText","setConfirmationText","useState","deleteLoading","invokeDeleteApi","useApi","onDelSuccess","err","setErrorSnackMessage","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onConfirmDelete","url","concat","rules","onClose","confirmButtonProps","disabled","confirmationContent","Fragment","children","_jsxs","Grid","item","xs","InputBox","id","name","onChange","event","target","value","label"],"sourceRoot":""}