{"version":3,"file":"static/js/6799.61dee8ac.chunk.js","mappings":"wOAiCA,MA6EA,EA7EuBA,IAMC,IANA,UACtBC,EAAS,QACTC,EAAO,OACPC,EAAM,OACNC,EAAM,QACNC,GACgBL,EAChB,MAAMM,GAAWC,EAAAA,EAAAA,OACVC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAcL,GA2B1D,OACEM,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CACXd,UAAWA,EACXe,MAAK,kCAAAC,OAAA,GAAAA,OAAuCd,EAAM,KAAAc,OAAIb,GAAU,KAChEF,QAASA,EACTgB,WAAWP,EAAAA,EAAAA,KAACQ,EAAAA,IAAiB,IAAIN,SAAA,EAEjCF,EAAAA,EAAAA,KAACS,EAAAA,IAAU,CAACC,kBAAkB,EAAOC,aAAa,EAAMT,UACtDF,EAAAA,EAAAA,KAACY,EAAAA,IAAM,CACLC,GAAG,SACHC,KAAK,SACLC,SAAWC,IACTlB,EAAkBkB,EAAM,EAE1BC,MAAM,SACND,MAAOnB,EACPqB,QA1CY,CACpB,CAAED,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,YAAaD,MAAO,aAC7B,CAAEC,MAAO,YAAaD,MAAO,cAwCrBG,UAAU,OAGdhB,EAAAA,EAAAA,MAACiB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,GAAIC,EAAAA,GAAgBC,eAAevB,SAAA,EACpDF,EAAAA,EAAAA,KAAC0B,EAAAA,IAAM,CACLb,GAAI,QACJc,KAAK,SACLC,QAAQ,UACRC,QA7CQC,KAChBhC,EAAkBJ,EAAQ,EA6ClBuB,MAAO,WAETjB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAM,CACLb,GAAI,OACJc,KAAK,SACLC,QAAQ,aACRC,QAhDYE,KACpBC,EAAAA,EAAIxC,OACDyC,wBAAwBzC,EAAQ,CAC/B0C,OAAQzC,EACR0C,OAAQtC,IAETuC,MAAK,KACJ7C,GAAS,IAEV8C,OAAOC,IACN3C,GAAS4C,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAIG,SACjDlD,GAAS,GACT,EAqCI0B,MAAO,gBAIJ,C","sources":["screens/Console/Buckets/BucketDetails/EditAccessRule.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { AddAccessRuleIcon, Button, FormLayout, Grid, Select } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\n\ninterface IEditAccessRule {\n  modalOpen: boolean;\n  onClose: () => any;\n  bucket: string;\n  toEdit: string;\n  initial: string;\n}\n\nconst EditAccessRule = ({\n  modalOpen,\n  onClose,\n  bucket,\n  toEdit,\n  initial,\n}: IEditAccessRule) => {\n  const dispatch = useAppDispatch();\n  const [selectedAccess, setSelectedAccess] = useState<any>(initial);\n\n  const accessOptions = [\n    { label: \"readonly\", value: \"readonly\" },\n    { label: \"writeonly\", value: \"writeonly\" },\n    { label: \"readwrite\", value: \"readwrite\" },\n  ];\n\n  const resetForm = () => {\n    setSelectedAccess(initial);\n  };\n\n  const createProcess = () => {\n    api.bucket\n      .setAccessRuleWithBucket(bucket, {\n        prefix: toEdit,\n        access: selectedAccess,\n      })\n      .then(() => {\n        onClose();\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        onClose();\n      });\n  };\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title={`Edit Anonymous Access Rule for ${`${bucket}/${toEdit || \"\"}`}`}\n        onClose={onClose}\n        titleIcon={<AddAccessRuleIcon />}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <Select\n            id=\"access\"\n            name=\"Access\"\n            onChange={(value) => {\n              setSelectedAccess(value);\n            }}\n            label=\"Access\"\n            value={selectedAccess}\n            options={accessOptions}\n            disabled={false}\n          />\n        </FormLayout>\n        <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n          <Button\n            id={\"clear\"}\n            type=\"button\"\n            variant=\"regular\"\n            onClick={resetForm}\n            label={\"Clear\"}\n          />\n          <Button\n            id={\"save\"}\n            type=\"submit\"\n            variant=\"callAction\"\n            onClick={createProcess}\n            label={\"Save\"}\n          />\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default EditAccessRule;\n"],"names":["_ref","modalOpen","onClose","bucket","toEdit","initial","dispatch","useAppDispatch","selectedAccess","setSelectedAccess","useState","_jsx","Fragment","children","_jsxs","ModalWrapper","title","concat","titleIcon","AddAccessRuleIcon","FormLayout","containerPadding","withBorders","Select","id","name","onChange","value","label","options","disabled","Grid","item","xs","sx","modalStyleUtils","modalButtonBar","Button","type","variant","onClick","resetForm","createProcess","api","setAccessRuleWithBucket","prefix","access","then","catch","err","setErrorSnackMessage","errorToHandler","error"],"sourceRoot":""}