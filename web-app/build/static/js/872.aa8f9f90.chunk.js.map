{"version":3,"file":"static/js/872.aa8f9f90.chunk.js","mappings":"uSA+BA,MA8CA,EA9CkCA,IAKL,IALM,kBACjCC,EAAiB,WACjBC,EAAU,OACVC,EAAM,GACNC,GACqBJ,EACrB,MAAMK,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAkB,IAE1DC,EAAAA,EAAAA,YAAU,KACJH,GACFI,EAAAA,EAAIC,QACDC,0BAA0BV,EAAQC,GAClCU,MAAK,KACJN,GAAgB,GAChBP,GAAkB,EAAK,IAExBc,OAAOC,IACNR,GAAgB,GAChBH,GAASY,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,EAAIG,QAAQ,GAE/D,GACC,CAACZ,EAAcJ,EAAQC,EAAIH,EAAmBI,IAMjD,OACEe,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,wBACLC,YAAa,SACbC,OAAQtB,EACRuB,UAAWlB,EACXmB,UAVoBC,KACtBnB,GAAgB,EAAK,EAUnBoB,WAAWR,EAAAA,EAAAA,KAACS,EAAAA,IAAiB,IAC7BC,QAASA,IAAM7B,GAAkB,GACjC8B,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,wCAC4Bd,EAAAA,EAAAA,KAAA,UAAAc,SAAS9B,IAAY,aAG7D,E,qCCzBN,MAyfA,EAzfmCJ,IAKN,IAADmC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IALQ,qBAClCC,EAAoB,eACpBC,EAAc,cACdC,EAAa,KACbC,GACqB3C,EACrB,MAAMK,GAAWC,EAAAA,EAAAA,OACVsC,EAAcC,IAAmBpC,EAAAA,EAAAA,WAAkB,IACnDqC,EAAYC,IAAiBtC,EAAAA,EAAAA,WAAkB,IAC/CuC,EAAMC,IAAWxC,EAAAA,EAAAA,UAAiB,KAClCyC,EAASC,IAAc1C,EAAAA,EAAAA,WAAkB,IACzC2C,EAAWC,IAAgB5C,EAAAA,EAAAA,UAA2B,KACtD6C,EAAQC,IAAa9C,EAAAA,EAAAA,UAAS,KAC9B+C,EAAcC,IAAmBhD,EAAAA,EAAAA,UAAS,KAC1CiD,EAAgBC,IAAqBlD,EAAAA,EAAAA,UAAS,KAC9CmD,EAAiBC,IAAsBpD,EAAAA,EAAAA,WAAkB,IACzDqD,EAAsBC,IAC3BtD,EAAAA,EAAAA,WAAkB,IACbuD,EAAkBC,IAAuBxD,EAAAA,EAAAA,UAAiB,MAC1DyD,EAAkBC,IAAuB1D,EAAAA,EAAAA,UAAiB,MAC1D2D,EAASC,IAAc5D,EAAAA,EAAAA,UAAkC,WACzD6D,EAAYC,IAAiB9D,EAAAA,EAAAA,UAAiB,MAC9C+D,EAAgBC,IAAqBhE,EAAAA,EAAAA,UAAiB,MACtDiE,EAAaC,IAAkBlE,EAAAA,EAAAA,WAAkB,IACjDmE,GAAaC,KAAkBpE,EAAAA,EAAAA,WAAkB,IACjDqE,GAAUC,KAAetE,EAAAA,EAAAA,WAAkB,IAOlDC,EAAAA,EAAAA,YAAU,KACJkC,GACFjC,EAAAA,EAAIqE,MACD5B,YACAtC,MAAMmE,IACL,MAAM7B,EAA2B8B,IAAID,EAAIE,KAAM,QAAS,IAExD,GAAkB,OAAd/B,GAAsBA,EAAUgC,QAAU,EAAG,CAC/C,MAAMC,EAAUjC,EAAUkC,KAAKC,IAC7B,MAAMC,EAAWD,EAAKE,KAChBC,EAAQR,IAAIK,EAAK,GAADI,OAAKH,EAAQ,SAAS,IAE5C,MAAO,CAAEI,MAAOF,EAAOA,MAAOA,EAAO,IAGvCrC,EAAagC,GACTA,EAAQD,OAAS,GACnB3B,EAAgB4B,EAAQ,GAAGK,MAE/B,CACA7C,GAAgB,EAAM,IAEvB9B,OAAM,KACL8B,GAAgB,EAAM,GAE5B,GACC,CAACD,KAEJlC,EAAAA,EAAAA,YAAU,KACR,IAAImF,GAAQ,EAEI,WAAZzB,GACmB,KAAjBZ,IACFqC,GAAQ,GAGZlB,EAAekB,EAAM,GACpB,CAACzB,EAASE,EAAYE,EAAgBhB,KAEzC9C,EAAAA,EAAAA,YAAU,KAAO,IAADoF,EAAAC,EACe,YAAzBrD,EAAcsD,QAChB7C,GAAW,GAGb,IAAI8C,GAAiB,EA+DA,IAADC,EAAAC,EAAAC,EAAAC,EAQbC,EAAAC,GArEH7D,EAAc8D,aAEd9D,EAAc8D,WAAWC,MACS,IAAlC/D,EAAc8D,WAAWC,OAEzBhC,EAAkB/B,EAAc8D,WAAWC,KAAKC,YAChDrC,EAAW,cACX4B,GAAiB,GAGjBvD,EAAc8D,WAAWG,4BAC+B,IAAxDjE,EAAc8D,WAAWG,6BAEzBxC,EACEzB,EAAc8D,WAAWG,2BAA2BD,YAEtDrC,EAAW,cACX4B,GAAiB,GAKjBvD,EAAc8D,WAAWI,MACS,yBAAlClE,EAAc8D,WAAWI,OAEzBvC,EAAW,cACX4B,GAAiB,IAIjBvD,EAAcmE,aAEdnE,EAAcmE,WAAWJ,MACS,IAAlC/D,EAAcmE,WAAWJ,OAEzBlC,EAAc7B,EAAcmE,WAAWJ,KAAKC,YAC5CrC,EAAW,UACX4B,GAAiB,GAGjBvD,EAAcmE,WAAWC,4BAC+B,IAAxDpE,EAAcmE,WAAWC,6BAEzB7C,EACEvB,EAAcmE,WAAWC,2BAA2BJ,YAEtDrC,EAAW,UACX4B,GAAiB,GAKjBvD,EAAcmE,WAAWD,MACS,yBAAlClE,EAAcmE,WAAWD,OAEzBvC,EAAW,UACX4B,GAAiB,IAKjBA,IACFxC,GAAwC,QAAxByC,EAAAxD,EAAc8D,kBAAU,IAAAN,OAAA,EAAxBA,EAA0Ba,gBAAiB,IAC3D5C,GAC0B,QAAxBgC,EAAAzD,EAAc8D,kBAAU,IAAAL,GAA4B,QAA5BC,EAAxBD,EAA0BQ,kCAA0B,IAAAP,OAA5B,EAAxBA,EAAsDM,aAAc,KAEtE/C,GAC0B,QAAxB0C,EAAA3D,EAAc8D,kBAAU,IAAAH,OAAA,EAAxBA,EAA0BW,2BAA4B,KAIxD/C,GAC0B,QAAxBqC,EAAA5D,EAAcmE,kBAAU,IAAAP,GAA4B,QAA5BC,EAAxBD,EAA0BQ,kCAA0B,IAAAP,OAA5B,EAAxBA,EAAsDG,aAAc,KAQxE,GAJA7C,IAA6C,QAAzBiC,EAACpD,EAAcmE,kBAAU,IAAAf,IAAxBA,EAA0BmB,gBAC/ClD,IAAkD,QAAzBgC,EAACrD,EAAcmE,kBAAU,IAAAd,IAAxBA,EAA0BmB,aACpD3D,EAAUb,EAAcY,QAAU,IAE9BZ,EAAcM,KAAM,CACtB,MAAMmE,EAAMzE,EAAcM,KAAKoE,QAC7B,CAACC,EAAmBC,EAAeC,IAC3B,GAAN5B,OAAU0B,GAAS1B,OAAa,IAAV4B,EAAc,IAAM,IAAE5B,OAAG2B,EAASE,IAAG,KAAA7B,OACzD2B,EAAS5B,QAGb,IAGFzC,EAAQkE,EACV,IACC,CAACzE,IA+EJ,IAAI+E,GAAgB,GAkBpB,OAhBI/E,EAAcmE,aACZnE,EAAcmE,WAAWJ,KAAO,EAClCgB,GAAgB,kBACP/E,EAAcmE,WAAWC,6BAClCW,GAAgB,wBAIhB/E,EAAc8D,aACZ9D,EAAc8D,WAAWC,KAAO,EAClCgB,GAAgB,kBACP/E,EAAc8D,WAAWG,6BAClCc,GAAgB,yBAKlBrG,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,CACX5F,QAASA,KACPU,GAAqB,EAAM,EAE7BmF,UAAWhF,EACXrB,MAAO,+BACPM,WAAWR,EAAAA,EAAAA,KAACwG,EAAAA,IAAmB,IAAI1F,SAEjCU,GA+NAxB,EAAAA,EAAAA,KAACyG,EAAAA,IAAM,CAACC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,OA9NpC5G,EAAAA,EAAAA,KAAA,QACE6G,YAAU,EACVC,aAAa,MACbC,SAAWC,IA5GCC,KAGlB,GAFAA,EAAMC,kBAEFxF,IAGJC,GAAc,GACS,OAAnBN,GAA6C,OAAlBC,GAAwB,CACrD,IAAI6F,EAAQ,CAAC,EAEb,GAAgB,WAAZnE,EAAsB,CAAC,IAADoE,EAAAC,EAAAC,EACxB,IAAIC,EAAoC,CAAC,EAGf,QAAxBH,EAAA9F,EAAcmE,kBAAU,IAAA2B,GAAxBA,EAA0B/B,OACF,QAAxBgC,EAAA/F,EAAcmE,kBAAU,IAAA4B,OAAA,EAAxBA,EAA0BhC,MAAO,IAEjCkC,EAAoB,YAAIC,SAAStE,IAEP,QAA5BoE,EAAIhG,EAAcmE,kBAAU,IAAA6B,GAAxBA,EAA0B5B,6BAC5B6B,EAA0C,kCACxCC,SAAS5E,IAGbuE,EAAQ,IACHI,EAEP,KAAO,CAAC,IAADE,EAAAC,EAAAC,EACL,IAAIvC,EAAiD,CAAC,EAG5B,QAAxBqC,EAAAnG,EAAc8D,kBAAU,IAAAqC,GAAxBA,EAA0BpC,OACF,QAAxBqC,EAAApG,EAAc8D,kBAAU,IAAAsC,OAAA,EAAxBA,EAA0BrC,MAAO,IAEjCD,EAA4B,gBAAIoC,SAASpE,GACzCgC,EAA0B,cAAIhD,GAEJ,QAA5BuF,EAAIrG,EAAc8D,kBAAU,IAAAuC,GAAxBA,EAA0BpC,6BAC5BH,EAA8C,kCAC5CoC,SAAS1E,GACXsC,EAAuD,2CACrD9C,GAGJ6E,EAAQ,IACH/B,EAEP,CAEA,MAAMwC,EAAkB,CACtBvD,KAAMrB,EACN6E,SAAU/F,EACVI,SACAN,OACAkG,6BAA8BtF,EAC9BuF,0BAA2BrF,KACxByE,GAGL5H,EAAAA,EAAIC,QACDwI,sBACC3G,EACAC,EAActC,GACd4I,GAEDlI,MAAMmE,IACLlC,GAAc,GACdP,GAAqB,EAAK,IAE3BzB,OAAMsI,UACLtG,GAAc,GACd,MAAM/B,QAAasI,EAAKC,OACxBlJ,GAASY,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeF,IAAM,GAEzD,GAmCQwI,CAAWpB,EAAE,EACblG,UAEFF,EAAAA,EAAAA,MAACyH,EAAAA,IAAU,CAACC,kBAAkB,EAAOC,aAAa,EAAMzH,SAAA,EACtDd,EAAAA,EAAAA,KAACwI,EAAAA,IAAM,CACLhE,MAAM,SACNiE,gBAAiB,CAAC,UAAW,YAC7BC,QAAS5G,EACTwC,MAAO,eACPtF,GAAG,cACH2J,KAAK,cACLC,SAAW5B,IACTjF,EAAWiF,EAAE6B,OAAOH,QAAQ,KAGhC1I,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAG,KACH2J,KAAK,KACLnE,MAAM,KACNF,MAAOhD,EAActC,GACrB4J,SAAUA,OACVG,UAAQ,IAET/F,GACChD,EAAAA,EAAAA,KAACgJ,EAAAA,IAAU,CACTC,aAAcjG,EACdhE,GAAG,YACH2J,KAAK,YACLnE,MAAM,YACN0E,gBA3RI,CAChB,CAAE5E,MAAO,SAAUE,MAAO,UAC1B,CAAEF,MAAO,aAAcE,MAAO,eA0RlBoE,SAAUA,OACVO,gBAAc,IAEd,MAEJnJ,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAG,iBACH2J,KAAK,iBACLnE,MAAM,iBACNF,MAAO+B,GACPuC,SAAUA,OACVG,UAAQ,IAGG,WAAZ/F,IAAgD,QAA5BjC,EAAIO,EAAcmE,kBAAU,IAAA1E,OAAA,EAAxBA,EAA0BsE,QACjDrF,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACPzE,KAAK,SACLrF,GAAG,cACH2J,KAAK,cACLC,SAAW5B,IACT7D,EAAc6D,EAAE6B,OAAOvE,MAAM,EAE/BE,MAAM,cACNF,MAAOpB,EACPkG,IAAI,MAIK,WAAZpG,IACyB,QADLhC,EACnBM,EAAcmE,kBAAU,IAAAzE,OAAA,EAAxBA,EAA0B0E,8BACxB1F,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACPzE,KAAK,SACLrF,GAAG,oCACH2J,KAAK,oCACLC,SAAW5B,IACTnE,EAAoBmE,EAAE6B,OAAOvE,MAAM,EAErCE,MAAM,8BACNF,MAAO1B,EACPwG,IAAI,MAGG,eAAZpG,IAAoD,QAA5B/B,EAAIK,EAAc8D,kBAAU,IAAAnE,OAAA,EAAxBA,EAA0BoE,QACrDzE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPd,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACPzE,KAAK,SACLrF,GAAG,kBACH2J,KAAK,kBACLC,SAAW5B,IACT3D,EAAkB2D,EAAE6B,OAAOvE,MAAM,EAEnCE,MAAM,kBACNF,MAAOlB,EACPgG,IAAI,OAENpJ,EAAAA,EAAAA,KAACqJ,EAAAA,IAAM,CACL7E,MAAM,OACNxF,GAAG,gBACH2J,KAAK,gBACLrE,MAAOlC,EACPwG,SAAWtE,IACTjC,EAAgBiC,EAAM,EAExBgF,QAAStH,OAKF,eAAZgB,IACyB,QADD9B,EACvBI,EAAc8D,kBAAU,IAAAlE,OAAA,EAAxBA,EAA0BqE,8BACxB3E,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPd,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACPzE,KAAK,SACLrF,GAAG,oCACH2J,KAAK,oCACLC,SAAW5B,IACTjE,EAAoBiE,EAAE6B,OAAOvE,MAAM,EAErCE,MAAM,8BACNF,MAAOxB,EACPsG,IAAI,OAENpJ,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAG,yBACH2J,KAAK,yBACLC,SAAW5B,IACTzE,EAAkByE,EAAE6B,OAAOvE,MAAM,EAEnCiF,YAAY,mDACZ/E,MAAM,+CACNF,MAAOhC,QAIftC,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBF,EAAAA,EAAAA,MAAC+I,EAAAA,IAAS,CACRzJ,MAAO,UACPlB,GAAI,oBACJ0E,SAAUA,GACVkG,aAAcA,IAAMjG,IAAaD,IAAU5C,SAAA,EAE3Cd,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAG,SACH2J,KAAK,SACLC,SAAW5B,IACT7E,EAAU6E,EAAE6B,OAAOvE,MAAM,EAE3BE,MAAM,SACNF,MAAOpC,KAETlC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAkB,CACjBlB,KAAK,OACLnE,MAAM,OACNsF,SAAUlI,EACVgH,SAAWmB,IACTlI,EAAQkI,EAAG,EAEbC,eAAe,UACfC,iBAAiB,YACjBC,YAAU,SAIH,WAAZlH,IACyB,QADL7B,EACnBG,EAAcmE,kBAAU,IAAAtE,OAAA,EAAxBA,EAA0BuE,8BACxB1F,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBF,EAAAA,EAAAA,MAAC+I,EAAAA,IAAS,CACRzJ,MAAO,WACPlB,GAAI,6BACJ0E,SAAUF,GACVoG,aAAcA,IAAMnG,IAAgBD,IACpC2G,GAAI,CAAEC,UAAW,IAAKtJ,SAAA,EAEtBd,EAAAA,EAAAA,KAACwI,EAAAA,IAAM,CACLlE,MAAM,wBACNtF,GAAG,wBACH2J,KAAK,wBACLD,QAASlG,EACToG,SACE3B,IAEAxE,EAAmBwE,EAAM4B,OAAOH,QAAQ,EAE1ClE,MAAO,kCAETxE,EAAAA,EAAAA,KAACwI,EAAAA,IAAM,CACLlE,MAAM,qBACNtF,GAAG,qBACH2J,KAAK,qBACLD,QAAShG,EACTkG,SACE3B,IAEAtE,EAAwBsE,EAAM4B,OAAOH,QAAQ,EAE/ClE,MAAO,+BAKjB5D,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIS,GAAIE,EAAAA,GAAgBC,eAAexJ,SAAA,EACpDd,EAAAA,EAAAA,KAACuK,EAAAA,IAAM,CACLvL,GAAI,SACJqF,KAAK,SACLmG,QAAQ,UACRzB,SAAUrH,EACV+I,QAASA,KACPrJ,GAAqB,EAAM,EAE7BoD,MAAO,YAETxE,EAAAA,EAAAA,KAACuK,EAAAA,IAAM,CACLvL,GAAI,OACJqF,KAAK,SACLmG,QAAQ,aACRE,MAAM,UACN3B,SAAUrH,IAAe4B,EACzBkB,MAAO,YAGV9C,IACC1B,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBd,EAAAA,EAAAA,KAAC2K,EAAAA,IAAW,YAQT,E,eCjfnB,MA0bA,EA1b0B/L,IAIA,IAJC,KACzB2C,EAAI,qBACJH,EAAoB,WACpBwJ,GACkBhM,EAClB,MAAMK,GAAWC,EAAAA,EAAAA,MACX2L,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,KAC9BvJ,EAAcC,IAAmBpC,EAAAA,EAAAA,WAAkB,IACnD2C,EAAWC,IAAgB5C,EAAAA,EAAAA,UAA2B,KACtDqC,EAAYC,IAAiBtC,EAAAA,EAAAA,WAAS,IACtC2L,EAAgBC,IACrB5L,EAAAA,EAAAA,UAA0C,OACrC6C,EAAQC,IAAa9C,EAAAA,EAAAA,UAAS,KAC9BuC,EAAMC,IAAWxC,EAAAA,EAAAA,UAAiB,KAClC+C,EAAcC,IAAmBhD,EAAAA,EAAAA,UAAS,KAE1C2D,EAASC,IAAc5D,EAAAA,EAAAA,UAAkC,WACzD6L,EAAeC,IAAoB9L,EAAAA,EAAAA,UACxC,YAEK+L,EAAeC,IAAoBhM,EAAAA,EAAAA,UAAiB,KACpDiE,EAAaC,IAAkBlE,EAAAA,EAAAA,WAAkB,IACjDmD,EAAiBC,IAAsBpD,EAAAA,EAAAA,WAAkB,IACzDqD,EAAsBC,IAC3BtD,EAAAA,EAAAA,WAAkB,IACbiM,EAAmBC,IAAwBlM,EAAAA,EAAAA,WAAkB,IAC7DmE,EAAaC,IAAkBpE,EAAAA,EAAAA,WAAkB,IACjDqE,EAAUC,IAAetE,EAAAA,EAAAA,WAAkB,IAC3CmM,EAAYC,IAAiBpM,EAAAA,EAAAA,UAAiB,QAG/CqM,GAAqB,CACzB,mBAAoB,CAAEC,QAAS,KAGjCrM,EAAAA,EAAAA,YAAU,KACJkC,GACFjC,EAAAA,EAAIqE,MACD5B,YACAtC,MAAMmE,IACL,MAAM7B,EAA2B8B,IAAID,EAAIE,KAAM,QAAS,IAExD,GAAkB,OAAd/B,GAAsBA,EAAUgC,QAAU,EAAG,CAC/C,MAAMC,EAAUjC,EAAUkC,KAAKC,IAC7B,MAAMC,EAAWD,EAAKE,KAChBC,EAAQR,IAAIK,EAAK,GAADI,OAAKH,EAAQ,SAAS,IAE5C,MAAO,CAAEI,MAAOF,EAAOA,MAAOA,EAAO,IAGvCrC,EAAagC,GACTA,EAAQD,OAAS,GACnB3B,EAAgB4B,EAAQ,GAAGK,MAE/B,CACA7C,GAAgB,EAAM,IAEvB9B,OAAM,KACL8B,GAAgB,EAAM,GAE5B,GACC,CAACD,KAEJlC,EAAAA,EAAAA,YAAU,KACR,IAAImF,GAAQ,EAEI,WAAZzB,GACmB,KAAjBZ,IACFqC,GAAQ,GAGP2G,GAA6C,IAA5B5D,SAAS4D,KAC7B3G,GAAQ,GAEN+C,SAAS4D,GAAiB,aAE5B3G,GAAQ,GAEVlB,EAAekB,EAAM,GACpB,CAACzB,EAASoI,EAAehJ,KAE5B9C,EAAAA,EAAAA,YAAU,KACJgM,GAAqBT,GACvBtL,EAAAA,EAAIC,QACDoM,oBAAoBhB,GACpBlL,MAAMmE,IACLoH,EAAkBpH,EAAIE,MACtBwH,GAAqB,EAAM,IAE5B5L,OAAOC,IACNX,GAAS4M,EAAAA,EAAAA,KAA0B/L,EAAAA,EAAAA,GAAeF,KAClD2L,GAAqB,EAAM,GAEjC,GACC,CAACD,EAAmBrM,EAAU2L,EAAYC,IAwD7C,OACEjK,EAAAA,EAAAA,MAAC0F,EAAAA,EAAY,CACXC,UAAWhF,EACXb,QAASA,KACPU,GAAqB,EAAM,EAE7BlB,MAAM,qBACNM,WAAWR,EAAAA,EAAAA,KAACwG,EAAAA,IAAmB,IAAI1F,SAAA,CAElCU,IACCxB,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACsC,WAAS,EAAAhL,UACbd,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBd,EAAAA,EAAAA,KAAC2K,EAAAA,IAAW,SAKhBnJ,IACAxB,EAAAA,EAAAA,KAAA,QACE6G,YAAU,EACVC,aAAa,MACbC,SAAWC,IACTA,EAAEE,iBACFvF,GAAc,GA7ENoK,MAChB,IAAI5E,EAAQ,CAAC,EAEb,GAAgB,WAAZnE,EAAsB,CACxB,IAAIuE,EAAoC,CAAC,EAEnB,YAAlB2D,EACF3D,EAAoB,YAAIC,SAAS4D,GACT,SAAfI,EACTjE,EAA0C,kCAAIC,SAAS4D,GAEvD7D,EAAoD,4CAClDC,SAAS4D,GAGbjE,EAAQ,IACHI,EAEP,KAAO,CACL,IAAInC,EAAiD,CAAC,EAChC,YAAlB8F,GACF9F,EAA4B,gBAAIoC,SAAS4D,GACzChG,EAA0B,cAAIhD,GACN,SAAfoJ,IACTpG,EAA8C,kCAC5CoC,SAAS4D,GACXhG,EAAuD,2CAAIhD,GAG7D+E,EAAQ,IACH/B,EAEP,CAEA,MAAM4G,EAAkB,CACtB3H,KAAMrB,EACNd,SACAN,OACAkG,6BAA8BtF,EAC9BuF,0BAA2BrF,KACxByE,GAGL5H,EAAAA,EAAIC,QACDyM,mBAAmBrB,EAAYoB,GAC/BtM,MAAK,KACJiC,GAAc,GACdP,GAAqB,EAAK,IAE3BzB,OAAOC,IACN+B,GAAc,GACd1C,GAAS4M,EAAAA,EAAAA,KAA0B/L,EAAAA,EAAAA,GAAeF,IAAM,GACxD,EA0BImM,EAAW,EACXjL,UAEFF,EAAAA,EAAAA,MAACyH,EAAAA,IAAU,CAACE,aAAa,EAAOD,kBAAkB,EAAMxH,SAAA,EACtDd,EAAAA,EAAAA,KAACgJ,EAAAA,IAAU,CACTC,aAAcjG,EACdhE,GAAG,WACH2J,KAAK,WACLnE,MAAM,oBACNoE,SAAW5B,IACT/D,EAAW+D,EAAE6B,OAAOvE,MAAiC,EAEvD4E,gBAAiB,CACf,CAAE5E,MAAO,SAAUE,MAAO,UAC1B,CAAEF,MAAO,aAAcE,MAAO,eAEhC0H,SACEtL,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,SACD,KACPd,EAAAA,EAAAA,KAAA,KACE6I,OAAO,QACPsD,KAAK,kIAAiIrL,SACvI,WAEI,IAAI,0CAC+B,KACxCd,EAAAA,EAAAA,KAAA,KACE6I,OAAO,QACPsD,KAAK,kHAAiHrL,SACvH,eAEI,IAAI,sCAC2B,KACpCd,EAAAA,EAAAA,KAAA,KACE6I,OAAO,QACPsD,KAAK,wIAAuIrL,SAC7I,SAEI,IAAI,oBAIbsL,iBAAiB,UAES,aAAb,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgBpG,UACf5E,EAAAA,EAAAA,KAACqJ,EAAAA,IAAM,CACL/E,MAAO4G,EACPlM,GAAG,iBACH2J,KAAK,iBACLnE,MAAM,iBACNoE,SAAWtE,IACT6G,EAAiB7G,EAAkC,EAErDgF,QAAS,CACP,CAAEhF,MAAO,UAAWE,MAAO,mBAC3B,CAAEF,MAAO,aAAcE,MAAO,wBAEhC0H,SACEtL,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,qEAGRF,EAAAA,EAAAA,MAAA,KACEiI,OAAO,QACPsD,KAAK,2JAA0JrL,SAAA,CAE9J,IAAI,iBAKXsL,iBAAiB,WAIrBpM,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP/I,MACEqL,IAAkB9H,EACdkE,SAAS4D,IAAkB,EAAC,aAAA7G,OACbiH,EAAU,wCACvBhE,SAAS4D,GAAiB,WAAU,aAAA7G,OACrBiH,EAAU,6CACvB,GACJ,GAENxM,GAAG,cACH2J,KAAK,cACLC,SAAW5B,IACLA,EAAE6B,OAAOwD,SAAS5H,OACpB4G,EAAiBrE,EAAE6B,OAAOvE,MAC5B,EAEFgI,QAAS,SACT9H,MAAM,QACNF,MAAO8G,EACPmB,eACEvM,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAAAC,UACPF,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CAACsC,WAAS,EAAC3B,GAAI,CAAEqC,eAAgB,UAAW1L,SAAA,EAC/Cd,EAAAA,EAAAA,KAACyM,EAAAA,EAAa,CACZzN,GAAI,sBACJ0N,aAAclB,EACdmB,UAAW,CACT,CAAEnI,MAAO,OAAQF,MAAO,QACxB,CAAEE,MAAO,WAAYF,MAAO,aAE9ByE,SACoB,eAAlBmC,GAA8C,WAAZlI,EAEpC4J,aAAeC,IACbpB,EAAcoB,EAAS,IAGd,WAAZ7J,GAA0C,eAAlBkI,IACvBtK,EAAAA,EAAAA,MAACkM,EAAAA,IAAO,CACNC,SACE/M,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAAAC,SAAC,8DAKZkM,UAAU,QAAOlM,SAAA,CAEhB,KACDd,EAAAA,EAAAA,KAACiN,EAAAA,IAAS,CAACvG,MAAO,CAAEC,MAAO,GAAIC,OAAQ,gBAQtC,WAAZ5D,GACChD,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,KAETb,EAAAA,EAAAA,KAACqJ,EAAAA,IAAM,CACL7E,MAAM,UACNxF,GAAG,gBACH2J,KAAK,gBACLrE,MAAOlC,EACPwG,SAAWtE,IACTjC,EAAgBiC,EAAgB,EAElCgF,QAAStH,EACTkK,SACEtL,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,cACI,KACZd,EAAAA,EAAAA,KAAA,KACEmM,KAAMe,EAAAA,GAAUC,UAChBzC,MAAM,YACNhE,MAAO,CAAE0G,eAAgB,aAActM,SACxC,gBAEI,IAAI,qCAIbsL,iBAAiB,WAGrBpM,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIS,GAAIuB,GAAmB5K,UACxCF,EAAAA,EAAAA,MAAC+I,EAAAA,IAAS,CACRzJ,MAAO,UACPlB,GAAI,oBACJ0E,SAAUA,EACVkG,aAAcA,IAAMjG,GAAaD,GAAU5C,SAAA,EAE3Cd,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBd,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAG,SACH2J,KAAK,SACLC,SAAW5B,IACT7E,EAAU6E,EAAE6B,OAAOvE,MAAM,EAE3BE,MAAM,SACNF,MAAOpC,OAGXlC,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBd,EAAAA,EAAAA,KAAC6J,EAAAA,EAAkB,CACjBlB,KAAK,OACLnE,MAAM,OACNsF,SAAU,GACVlB,SAAWmB,IACTlI,EAAQkI,EAAG,EAEbC,eAAe,UACfC,iBAAiB,YACjBC,YAAU,WAKL,WAAZlH,GAA0C,eAAlBkI,IACvBlL,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIS,GAAIuB,GAAmB5K,UACxCd,EAAAA,EAAAA,KAAC2J,EAAAA,IAAS,CACRzJ,MAAO,WACPlB,GAAI,6BACJ0E,SAAUF,EACVoG,aAAcA,IAAMnG,GAAgBD,GACpC2G,GAAI,CAAEC,UAAW,IAAKtJ,UAEtBF,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,SAAA,EAChBd,EAAAA,EAAAA,KAACwI,EAAAA,IAAM,CACLlE,MAAM,wBACNtF,GAAG,wBACH2J,KAAK,wBACLD,QAASlG,EACToG,SACE3B,IAEAxE,EAAmBwE,EAAM4B,OAAOH,QAAQ,EAE1ClE,MAAO,uBACP6I,YACE,gEAGJrN,EAAAA,EAAAA,KAACwI,EAAAA,IAAM,CACLlE,MAAM,qBACNtF,GAAG,qBACH2J,KAAK,qBACLD,QAAShG,EACTkG,SACE3B,IAEAtE,EAAwBsE,EAAM4B,OAAOH,QAAQ,EAE/ClE,MAAO,sBACP6I,YACE,mEAQZzM,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAIS,GAAIE,EAAAA,GAAgBC,eAAexJ,SAAA,EACpDd,EAAAA,EAAAA,KAACuK,EAAAA,IAAM,CACLvL,GAAI,QACJqF,KAAK,SACLmG,QAAQ,UACRzB,SAAUrH,EACV+I,QAASA,KACPrJ,GAAqB,EAAM,EAE7BoD,MAAO,YAETxE,EAAAA,EAAAA,KAACuK,EAAAA,IAAM,CACLvL,GAAI,iBACJqF,KAAK,SACLmG,QAAQ,aACRE,MAAM,UACN3B,SAAUrH,IAAe4B,EACzBkB,MAAO,YAGV9C,IACC1B,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBd,EAAAA,EAAAA,KAAC2K,EAAAA,IAAW,aAMT,E,cC5bnB,MA8UA,EA9U6B2C,KAC3B,MAAMC,GAAgBzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAC5BC,GAASC,EAAAA,EAAAA,MAERC,EAAkBC,IAAuBvO,EAAAA,EAAAA,WAAkB,IAC3DwO,EAAkBC,IAAuBzO,EAAAA,EAAAA,UAE9C,KACK0O,EAAkBC,IAAuB3O,EAAAA,EAAAA,WAAkB,IAC3D4O,EAAmBC,IAAwB7O,EAAAA,EAAAA,WAAkB,IAC7D8O,EAAuBC,IAC5B/O,EAAAA,EAAAA,UAA+B,OAC1BgP,EAAqBC,IAC1BjP,EAAAA,EAAAA,WAAkB,IACbkP,EAAYC,IAAiBnP,EAAAA,EAAAA,UAAwB,MACtDJ,GAAWC,EAAAA,EAAAA,MAEX0L,EAAa6C,EAAO7C,YAAc,GAElC6D,GAAwBC,EAAAA,EAAAA,GAAc9D,EAAY,CACtD+D,EAAAA,GAAWC,+BACXD,EAAAA,GAAWE,kBAGbvP,EAAAA,EAAAA,YAAU,KACJiO,GACFK,GAAoB,EACtB,GACC,CAACL,EAAeK,KAEnBtO,EAAAA,EAAAA,YAAU,KACRL,GAAS6P,EAAAA,EAAAA,IAAY,2BAA2B,GAE/C,KAEHxP,EAAAA,EAAAA,YAAU,KACJqO,IACEc,EACFlP,EAAAA,EAAIC,QACDuP,mBAAmBnE,GACnBlL,MAAMmE,IACL,MAAMmL,EAAUlL,IAAID,EAAIE,KAAM,YAAa,IAC3C+J,EAAoBkB,GAAW,IAC/BpB,GAAoB,EAAM,IAE3BjO,OAAOC,IACNqP,QAAQlP,MAAMH,EAAIG,OAClB+N,EAAoB,IACpBF,GAAoB,EAAM,IAG9BA,GAAoB,GAExB,GACC,CACDD,EACAC,EACAhD,EACA6D,IAGF,MA+BMS,EAAmB,CACvB,CACE1K,MAAO,OACP2K,kBAAkB,EAClBC,eAAiBC,GACVA,EAIHA,EAAG5J,aACF4J,EAAG5J,WAAWJ,KAAO,GACpBgK,EAAG5J,WAAWC,4BACb2J,EAAG5J,WAAW6J,sCACbD,EAAG5J,WAAW6J,qCAAuC,IAElDtP,EAAAA,EAAAA,KAAA,QAAAc,SAAM,WAGbuO,EAAGjK,aACFiK,EAAGjK,WAAWC,KAAO,GAAKgK,EAAGjK,WAAWG,6BAElCvF,EAAAA,EAAAA,KAAA,QAAAc,SAAM,gBAERd,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,KAjBPb,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,KAoBtB,CACE2D,MAAO,UACP2K,kBAAkB,EAClBC,eAAiBC,IACf,IAAKA,EACH,OAAOrP,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,IAElB,GAAIwO,EAAG5J,WAAY,CACjB,GAAI4J,EAAG5J,WAAWJ,KAAO,EACvB,OAAOrF,EAAAA,EAAAA,KAAA,QAAAc,SAAM,YACR,GACLuO,EAAG5J,WAAWC,4BACd2J,EAAG5J,WAAW6J,qCAEd,OAAOtP,EAAAA,EAAAA,KAAA,QAAAc,SAAM,eAEjB,CACA,GAAIuO,EAAGjK,WAAY,CACjB,GAAIiK,EAAGjK,WAAWC,KAAO,EACvB,OAAOrF,EAAAA,EAAAA,KAAA,QAAAc,SAAM,YACR,GAAIuO,EAAGjK,WAAWG,2BACvB,OAAOvF,EAAAA,EAAAA,KAAA,QAAAc,SAAM,eAEjB,IAGJ,CACE0D,MAAO,OACP+K,WAAY,gBACZH,eA9DwBI,IAC1B,IAAIC,EAAU3L,IAAI0L,EAAU,2BAA4B,IAGxD,OAFAC,EAAU3L,IAAI0L,EAAU,sCAAuCC,GAExDA,CAAO,EA2DZN,kBAAkB,GAEpB,CACE3K,MAAO,SACP+K,WAAY,UAEd,CACE/K,MAAO,QACP2K,kBAAkB,EAClBC,eAAiBC,IACf,IAAKA,EACH,OAAOrP,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,IAElB,GAAIwO,EAAGjK,WAAY,CACjB,GAAIiK,EAAGjK,WAAWC,KAAO,EACvB,OAAOzE,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOuO,EAAGjK,WAAWC,KAAK,WAC5B,GAAIgK,EAAGjK,WAAWG,2BACvB,OAAO3E,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOuO,EAAGjK,WAAWG,2BAA2B,UAE3D,CACA,OAAI8J,EAAG5J,WACD4J,EAAG5J,WAAWJ,KAAO,GAChBzE,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOuO,EAAG5J,WAAWJ,KAAK,WACxBgK,EAAG5J,WAAWC,4BAChB9E,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOuO,EAAG5J,WAAWC,2BAA2B,YAGrD9E,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CACGuO,EAAG5J,WAAW6J,qCAAqC,oBAR5D,CAYA,GAGJ,CACE9K,MAAO,SACP+K,WAAY,WAIVG,EAAmB,CACvB,CACErL,KAAM,OAENoG,OAAAA,CAAQkF,GACNvB,EAAyBuB,GACzBzB,GAAqB,EACvB,GAEF,CACE7J,KAAM,SACNoG,OAAAA,CAAQmF,GACNpB,EAAcoB,GACdtB,GAAuB,EACzB,EACAuB,YAAY,IAIhB,OACEjP,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CACNmN,GAAqBE,IACpBnO,EAAAA,EAAAA,KAAC8P,EAA0B,CACzBvO,KAAM0M,EACN7M,qBAxJuB2O,IAC7B7B,GAAqB,GACrBE,EAAyB,MACrB2B,GACFnC,GAAoB,EACtB,EAoJMvM,eAAgBuJ,EAChBtJ,cAAe6M,IAGlBJ,IACC/N,EAAAA,EAAAA,KAACgQ,EAAiB,CAChBzO,KAAMwM,EACNnD,WAAYA,EACZxJ,qBAzJsB2O,IAC5B/B,GAAoB,GAChB+B,GACFnC,GAAoB,EACtB,IAwJGS,GAAuBE,IACtBvO,EAAAA,EAAAA,KAACiQ,EAAyB,CACxBjR,GAAIuP,EACJxP,OAAQ6L,EACR9L,WAAYuP,EACZxP,kBA1JmBkR,IACzBzB,GAAuB,GACvBE,EAAc,MAEVuB,GACFnC,GAAoB,EACtB,KAuJE5N,EAAAA,EAAAA,KAACkQ,EAAAA,IAAY,CACXC,WAAS,EACThG,GAAI,CAAEiG,aAAc,IACpBC,SACErQ,EAAAA,EAAAA,KAACsQ,EAAAA,EAAe,CACdC,OAAQ,CACN5B,EAAAA,GAAW6B,+BACX7B,EAAAA,GAAW8B,gBAEbC,SAAU9F,EACV+F,UAAQ,EACRC,WAAY,CAAE7H,UAAU,GAAOjI,UAE/Bd,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAc,CAACC,QAAS,qBAAqBhQ,UAC5Cd,EAAAA,EAAAA,KAACuK,EAAAA,IAAM,CACLvL,GAAI,4BACJyL,QAASA,KACPuD,GAAoB,EAAK,EAE3BxJ,MAAO,qBACPuM,MAAM/Q,EAAAA,EAAAA,KAACgR,EAAAA,IAAO,IACdxG,QAAS,mBAIhB1J,UAEDd,EAAAA,EAAAA,KAAC8M,EAAAA,IAAO,CACNC,SACEnM,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,mDACoC,KAC5Cd,EAAAA,EAAAA,KAAA,KACE6I,OAAO,QACPsD,KAAK,mFAAkFrL,SACxF,iBAEI,IAAI,oFAKbkM,UAAU,QAAOlM,SAClB,uBAIHF,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CAACsC,WAAS,EAAAhL,SAAA,EACbd,EAAAA,EAAAA,KAACwJ,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,UAChBd,EAAAA,EAAAA,KAACsQ,EAAAA,EAAe,CACdC,OAAQ,CACN5B,EAAAA,GAAWC,+BACXD,EAAAA,GAAWE,gBAEb6B,SAAU9F,EACVgG,WAAY,CAAE7H,UAAU,GAAOjI,UAE/Bd,EAAAA,EAAAA,KAACiR,EAAAA,IAAS,CACRC,YAAaxB,EACbyB,QAASjC,EACT7O,UAAWsN,EACXqB,QAASnB,EACTuD,WAAW,YACXC,mBAAmB,mCACnBC,QAAQ,KACRC,kBAAmB,eAIvB5D,IACA/M,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG5I,SAAA,EAChBd,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACwR,EAAAA,IAAO,CACNtR,MAAO,kBACPuR,eAAezR,EAAAA,EAAAA,KAAC0R,EAAAA,IAAS,IACzBC,MACE/Q,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,8NAKRd,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,4BACoB,KAC1BA,EAAAA,EAAAA,KAAA,KACEmM,KAAK,4GACLtD,OAAO,SACP+I,IAAI,WAAU9Q,SACf,kBAEG,iBAQP,C,uGC3Vf,MAAM+Q,EAAiBC,EAAAA,GAAOC,QAAOnT,IAAA,IAAC,MAAEoT,GAAOpT,EAAA,MAAM,CACnDqT,OAAO,aAAD1N,OAAeT,IAAIkO,EAAO,cAAe,YAC/CE,aAAc,EACdxH,MAAO5G,IAAIkO,EAAO,gBAAiB,WACnCG,gBAAiBrO,IAAIkO,EAAO,gBAAiB,WAC7CI,SAAU,GACX,IAkDD,EAhDsBC,IAMA,IANC,GACrBrT,EAAE,aACF0N,EAAY,UACZC,EAAS,SACT5D,GAAW,EAAK,aAChB6D,GACcyF,EACd,MAAOC,EAAUC,GAAeC,EAAAA,SAAmC,MAC7DjR,EAAOkR,QAAQH,GAIfI,EAAeC,IACnBJ,EAAY,MACI,KAAZI,GAAkB/F,GACpBA,EAAa+F,EACf,EAGF,OACE/R,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPd,EAAAA,EAAAA,KAAC6R,EAAc,CACb7S,GAAE,GAAAuF,OAAKvF,EAAE,WACT,mBAAAuF,OAAkBvF,EAAE,SACpB,gBAAc,OACd,gBAAeuC,EAAO,YAASqR,EAC/BnI,QAjBexD,IACnBsL,EAAYtL,EAAM4L,cAAc,EAiB5B9J,SAAUA,EACV1E,KAAM,SAASvD,SAEd4L,KAEH1M,EAAAA,EAAAA,KAAC8S,EAAAA,IAAgB,CACf9T,GAAI,mBACJsK,QAASqD,EACToG,eAAgB,GAChBC,SAAW1O,GAAUoO,EAAYpO,GACjC2O,kBAAmBA,KACjBP,EAAY,GAAG,EAEjBnR,KAAMA,EACN+Q,SAAUA,EACVY,aAAc,UAEP,C,gHClCf,MAiNA,EAjN2BtU,IASC,IATA,SAC1BkL,EAAQ,KACRnB,EAAI,MACJnE,EAAK,QACLsM,EAAU,GAAE,eACZ9G,EAAiB,GAAE,iBACnBC,EAAmB,GAAE,SACrBrB,EAAQ,WACRsB,GAAa,GACOtL,EACpB,MAAOuU,EAAaC,IAAkB/T,EAAAA,EAAAA,UAAmB,CAAC,MACnDgU,EAAeC,IAAoBjU,EAAAA,EAAAA,UAAmB,CAAC,KACxDkU,GAAaC,EAAAA,EAAAA,cAGnBlU,EAAAA,EAAAA,YAAU,KACR,GACyB,IAAvB6T,EAAYnP,QACO,KAAnBmP,EAAY,IACa,IAAzBE,EAAcrP,QACO,KAArBqP,EAAc,IACdvJ,GACa,KAAbA,EACA,CACA,MAAM2J,EAAgB3J,EAAS4J,MAAM,KACrC,IAAIC,EAAO,GACPC,EAAS,GAEbH,EAAcI,SAASC,IACrB,MAAMC,EAAeD,EAAQJ,MAAM,KACP,IAAxBK,EAAa/P,SACf2P,EAAKK,KAAKD,EAAa,IACvBH,EAAOI,KAAKD,EAAa,IAC3B,IAGFJ,EAAKK,KAAK,IACVJ,EAAOI,KAAK,IAEZZ,EAAeO,GACfL,EAAiBM,EACnB,IACC,CAACT,EAAaE,EAAevJ,KAGhCxK,EAAAA,EAAAA,YAAU,KACR,MAAM2U,EAAYV,EAAWW,QACzBD,GAAad,EAAYnP,OAAS,GACpCiQ,EAAUE,gBAAe,EAC3B,GAEC,CAAChB,IAGJ,MAAMiB,GAAcC,EAAAA,EAAAA,SAAO,IAC3BC,EAAAA,EAAAA,kBAAgB,KACVF,EAAYF,QACdE,EAAYF,SAAU,EAGxBK,GAAmB,GAElB,CAACpB,EAAaE,IAGjB,MAiBMmB,EAAexN,IACnBA,EAAEyN,UAEF,IAAIC,EAAiB,IAAIvB,GACzB,MAAMhN,EAAQrC,IAAIkD,EAAE6B,OAAQ,gBAAiB,KAE7C6L,EADiBlN,SAASrB,IACCa,EAAE6B,OAAOvE,MAEpC8O,EAAesB,EAAe,EAG1BC,EAAiB3N,IACrBA,EAAEyN,UAEF,IAAIC,EAAiB,IAAIrB,GACzB,MAAMlN,EAAQrC,IAAIkD,EAAE6B,OAAQ,gBAAiB,KAE7C6L,EADiBlN,SAASrB,IACCa,EAAE6B,OAAOvE,MAEpCgP,EAAiBoB,EAAe,EAI5BH,EAAoBK,KAAS,KACjC,IAAIC,EAAc,GAElB1B,EAAYU,SAAQ,CAACiB,EAAQ3O,KAC3B,GAAIgN,EAAYhN,IAAUkN,EAAclN,GAAQ,CAC9C,IAAI4O,EAAY,GAAAxQ,OAAMuQ,EAAM,KAAAvQ,OAAI8O,EAAclN,IAChC,IAAVA,IACF4O,EAAY,IAAAxQ,OAAOwQ,IAErBF,EAAW,GAAAtQ,OAAMsQ,GAAWtQ,OAAGwQ,EACjC,KAGFnM,EAASiM,EAAY,GACpB,KAEGG,EAAS3B,EAAcnP,KAAI,CAAC4P,EAAS3N,KAEvCvF,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJuL,UAAW,2BAA2BnU,SAAA,EAGtCd,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAE,GAAAuF,OAAKoE,EAAI,SAAApE,OAAQ4B,EAAMb,YACzBd,MAAO,GACPmE,KAAI,GAAApE,OAAKoE,EAAI,KAAApE,OAAI4B,EAAMb,YACvBhB,MAAO6O,EAAYhN,GACnByC,SAAU4L,EACVrO,MAAOA,EACPoD,YAAaS,KAEfhK,EAAAA,EAAAA,KAAA,QAAMiV,UAAW,WAAWnU,SAAC,OAC7Bd,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,CACP9J,GAAE,GAAAuF,OAAKoE,EAAI,WAAApE,OAAU4B,EAAMb,YAC3Bd,MAAO,GACPmE,KAAI,GAAApE,OAAKoE,EAAI,KAAApE,OAAI4B,EAAMb,YACvBhB,MAAO+O,EAAclN,GACrByC,SAAU+L,EACVxO,MAAOA,EACPoD,YAAaU,EACbiL,YAAa/O,IAAUkN,EAAcrP,OAAS,GAAIhE,EAAAA,EAAAA,KAACgR,EAAAA,IAAO,IAAM,KAChEmE,cAAeA,KAnFFC,MACnB,GACiD,KAA/CjC,EAAYA,EAAYnP,OAAS,GAAGqR,QACe,KAAnDhC,EAAcA,EAAcrP,OAAS,GAAGqR,OACxC,CACA,MAAMC,EAAW,IAAInC,GACfoC,EAAa,IAAIlC,GAEvBiC,EAAStB,KAAK,IACduB,EAAWvB,KAAK,IAEhBZ,EAAekC,GACfhC,EAAiBiC,EACnB,GAuEQH,EAAc,MAEhB,cAAA7Q,OAxBiBoE,EAAI,KAAApE,OAAI4B,EAAMb,eA6BvC,OACEtF,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAAAC,UACPF,EAAAA,EAAAA,MAAC4I,EAAAA,IAAI,CACHC,MAAI,EACJC,GAAI,GACJS,GAAI,CACF,oBAAqB,CACnBqL,QAAS,QAEX,cAAe,CACbC,UAAW,SACXC,OAAQ,cACRC,WAAY,MAGhBV,UAAW,YAAYnU,SAAA,EAEvBF,EAAAA,EAAAA,MAACgV,EAAAA,IAAU,CAAA9U,SAAA,CACR0D,EACY,KAAZsM,IACC9Q,EAAAA,EAAAA,KAAC6V,EAAAA,IAAG,CACF1L,GAAI,CACF2L,WAAY,EACZN,QAAS,OACTO,WAAY,SACZ,cAAe,CACbpP,MAAO,KAET7F,UAEFd,EAAAA,EAAAA,KAACgW,EAAAA,IAAO,CAAClF,QAASA,EAAS9D,UAAU,MAAKlM,UACxCd,EAAAA,EAAAA,KAACiW,EAAAA,IAAQ,CAACvP,MAAO,CAAEC,MAAO,GAAIC,OAAQ,cAK9ChG,EAAAA,EAAAA,MAACiV,EAAAA,IAAG,CACFtN,YAAa2B,EACbC,GAAI,CACFwB,QAAS,GACT/E,OAAQ,IACRsP,UAAW,OACXC,SAAU,WACV/L,UAAW,IACXtJ,SAAA,CAEDkU,GACDhV,EAAAA,EAAAA,KAAA,OAAKoW,IAAK7C,WAGL,C","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketLifecycleRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  LifecycleConfigIcon,\n  Loader,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { api } from \"api\";\nimport { ApiError, Tier } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\ninterface IAddUserContentProps {\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const ILM_TYPES = [\n    { value: \"expiry\", label: \"Expiry\" },\n    { value: \"transition\", label: \"Transition\" },\n  ];\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setExpiredAllVersionsDM(!!lifecycleRule.expiration?.delete_all);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.transition?.days &&\n          lifecycleRule.transition?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(transitionDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.transition?.noncurrent_transition_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCTransitionDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        expired_object_delete_all: expiredAllVersionsDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch(async (eRes) => {\n          setAddLoading(false);\n          const err = (await eRes.json()) as ApiError;\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {!loadingTiers ? (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <FormLayout containerPadding={false} withBorders={false}>\n            <Switch\n              label=\"Status\"\n              indicatorLabels={[\"Enabled\", \"Disabled\"]}\n              checked={enabled}\n              value={\"user_enabled\"}\n              id=\"rule_status\"\n              name=\"rule_status\"\n              onChange={(e) => {\n                setEnabled(e.target.checked);\n              }}\n            />\n            <InputBox\n              id=\"id\"\n              name=\"id\"\n              label=\"Id\"\n              value={lifecycleRule.id}\n              onChange={() => {}}\n              disabled\n            />\n            {ilmType ? (\n              <RadioGroup\n                currentValue={ilmType}\n                id=\"rule_type\"\n                name=\"rule_type\"\n                label=\"Rule Type\"\n                selectorOptions={ILM_TYPES}\n                onChange={() => {}}\n                disableOptions\n              />\n            ) : null}\n\n            <InputBox\n              id=\"object-version\"\n              name=\"object-version\"\n              label=\"Object Version\"\n              value={objectVersion}\n              onChange={() => {}}\n              disabled\n            />\n\n            {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n              <InputBox\n                type=\"number\"\n                id=\"expiry_days\"\n                name=\"expiry_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setExpiryDays(e.target.value);\n                }}\n                label=\"Expiry Days\"\n                value={expiryDays}\n                min=\"0\"\n              />\n            )}\n\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <InputBox\n                  type=\"number\"\n                  id=\"noncurrentversion_expiration_days\"\n                  name=\"noncurrentversion_expiration_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCExpirationDays(e.target.value);\n                  }}\n                  label=\"Non-current Expiration Days\"\n                  value={NCExpirationDays}\n                  min=\"0\"\n                />\n              )}\n            {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n              <Fragment>\n                <InputBox\n                  type=\"number\"\n                  id=\"transition_days\"\n                  name=\"transition_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setTransitionDays(e.target.value);\n                  }}\n                  label=\"Transition Days\"\n                  value={transitionDays}\n                  min=\"0\"\n                />\n                <Select\n                  label=\"Tier\"\n                  id=\"storage_class\"\n                  name=\"storage_class\"\n                  value={storageClass}\n                  onChange={(value) => {\n                    setStorageClass(value);\n                  }}\n                  options={tiersList}\n                />\n              </Fragment>\n            )}\n\n            {ilmType === \"transition\" &&\n              lifecycleRule.transition?.noncurrent_transition_days && (\n                <Fragment>\n                  <InputBox\n                    type=\"number\"\n                    id=\"noncurrentversion_transition_days\"\n                    name=\"noncurrentversion_transition_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setNCTransitionDays(e.target.value);\n                    }}\n                    label=\"Non-current Transition Days\"\n                    value={NCTransitionDays}\n                    min=\"0\"\n                  />\n                  <InputBox\n                    id=\"noncurrentversion_t_SC\"\n                    name=\"noncurrentversion_t_SC\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setNCTransitionSC(e.target.value);\n                    }}\n                    placeholder=\"Set Non-current Version Transition Storage Class\"\n                    label=\"Non-current Version Transition Storage Class\"\n                    value={NCTransitionSC}\n                  />\n                </Fragment>\n              )}\n            <Grid item xs={12}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <InputBox\n                  id=\"prefix\"\n                  name=\"prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPrefix(e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={prefix}\n                />\n                <QueryMultiSelector\n                  name=\"tags\"\n                  label=\"Tags\"\n                  elements={tags}\n                  onChange={(vl: string) => {\n                    setTags(vl);\n                  }}\n                  keyPlaceholder=\"Tag Key\"\n                  valuePlaceholder=\"Tag Value\"\n                  withBorder\n                />\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <Grid item xs={12}>\n                  <Accordion\n                    title={\"Advanced\"}\n                    id={\"lifecycle-advanced-filters\"}\n                    expanded={expandedAdv}\n                    onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                    sx={{ marginTop: 15 }}\n                  >\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expired All Versions\"}\n                    />\n                  </Accordion>\n                </Grid>\n              )}\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      ) : (\n        <Loader style={{ width: 16, height: 16 }} />\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default EditLifecycleConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  AlertIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpTip,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse, Tier } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { IAM_PAGES } from \"common/SecureComponent/permissions\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  bucketName: string;\n}\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [expiryUnit, setExpiryUnit] = useState<string>(\"days\");\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    if (!lifecycleDays || parseInt(lifecycleDays) === 0) {\n      valid = false;\n    }\n    if (parseInt(lifecycleDays) > 2147483647) {\n      //values over int32 cannot be parsed\n      valid = false;\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else if (expiryUnit === \"days\") {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"newer_noncurrentversion_expiration_versions\"] =\n          parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else if (expiryUnit === \"days\") {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      expired_object_delete_all: expiredAllVersionsDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container>\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <FormLayout withBorders={false} containerPadding={false}>\n            <RadioGroup\n              currentValue={ilmType}\n              id=\"ilm_type\"\n              name=\"ilm_type\"\n              label=\"Type of Lifecycle\"\n              onChange={(e) => {\n                setIlmType(e.target.value as \"expiry\" | \"transition\");\n              }}\n              selectorOptions={[\n                { value: \"expiry\", label: \"Expiry\" },\n                { value: \"transition\", label: \"Transition\" },\n              ]}\n              helpTip={\n                <Fragment>\n                  Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html\"\n                  >\n                    Expiry\n                  </a>{\" \"}\n                  to delete Objects per this rule. Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-minio.html\"\n                  >\n                    Transition\n                  </a>{\" \"}\n                  to move Objects to a remote storage{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/windows/administration/object-management/transition-objects-to-minio.html#configure-the-remote-storage-tier\"\n                  >\n                    Tier\n                  </a>{\" \"}\n                  per this rule.\n                </Fragment>\n              }\n              helpTipPlacement=\"right\"\n            />\n            {versioningInfo?.status === \"Enabled\" && (\n              <Select\n                value={targetVersion}\n                id=\"object_version\"\n                name=\"object_version\"\n                label=\"Object Version\"\n                onChange={(value) => {\n                  setTargetVersion(value as \"current\" | \"noncurrent\");\n                }}\n                options={[\n                  { value: \"current\", label: \"Current Version\" },\n                  { value: \"noncurrent\", label: \"Non-Current Version\" },\n                ]}\n                helpTip={\n                  <Fragment>\n                    Select whether to apply the rule to current or non-current\n                    Object\n                    <a\n                      target=\"blank\"\n                      href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html#expire-versioned-objects\"\n                    >\n                      {\" \"}\n                      Versions\n                    </a>\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n\n            <InputBox\n              error={\n                lifecycleDays && !isFormValid\n                  ? parseInt(lifecycleDays) <= 0\n                    ? `Number of ${expiryUnit} to retain must be greater than zero`\n                    : parseInt(lifecycleDays) > 2147483647\n                      ? `Number of ${expiryUnit} must be less than or equal to 2147483647`\n                      : \"\"\n                  : \"\"\n              }\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setLifecycleDays(e.target.value);\n                }\n              }}\n              pattern={\"[0-9]*\"}\n              label=\"After\"\n              value={lifecycleDays}\n              overlayObject={\n                <Fragment>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <InputUnitMenu\n                      id={\"expire-current-unit\"}\n                      unitSelected={expiryUnit}\n                      unitsList={[\n                        { label: \"Days\", value: \"days\" },\n                        { label: \"Versions\", value: \"versions\" },\n                      ]}\n                      disabled={\n                        targetVersion !== \"noncurrent\" || ilmType !== \"expiry\"\n                      }\n                      onUnitChange={(newValue) => {\n                        setExpiryUnit(newValue);\n                      }}\n                    />\n                    {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                      <HelpTip\n                        content={\n                          <Fragment>\n                            Select to set expiry by days or newer noncurrent\n                            versions\n                          </Fragment>\n                        }\n                        placement=\"right\"\n                      >\n                        {\" \"}\n                        <AlertIcon style={{ width: 15, height: 15 }} />\n                      </HelpTip>\n                    )}\n                  </Grid>\n                </Fragment>\n              }\n            />\n\n            {ilmType === \"expiry\" ? (\n              <Fragment />\n            ) : (\n              <Select\n                label=\"To Tier\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value as string);\n                }}\n                options={tiersList}\n                helpTip={\n                  <Fragment>\n                    Configure a{\" \"}\n                    <a\n                      href={IAM_PAGES.TIERS_ADD}\n                      color=\"secondary\"\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      remote tier\n                    </a>{\" \"}\n                    to receive transitioned Objects\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n            <Grid item xs={12} sx={formFieldRowFilter}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <Grid item xs={12}>\n                  <InputBox\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion\n                  title={\"Advanced\"}\n                  id={\"lifecycle-advanced-filters\"}\n                  expanded={expandedAdv}\n                  onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                  sx={{ marginTop: 15 }}\n                >\n                  <Grid item xs={12}>\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expire Delete Marker\"}\n                      description={\n                        \"Remove the reference to the object if no versions are left\"\n                      }\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expire All Versions\"}\n                      description={\n                        \"Removes all the versions of the object already expired\"\n                      }\n                    />\n                  </Grid>\n                </Accordion>\n              </Grid>\n            )}\n\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default AddLifecycleModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  SectionTitle,\n  TiersIcon,\n  HelpTip,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\nimport { LifeCycleItem } from \"../types\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst BucketLifecyclePanel = () => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 ||\n            el.expiration.noncurrent_expiration_days ||\n            (el.expiration.newer_noncurrent_expiration_versions &&\n              el.expiration.newer_noncurrent_expiration_versions > 0))\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (\n            el.expiration.noncurrent_expiration_days ||\n            el.expiration.newer_noncurrent_expiration_versions\n          ) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          } else {\n            return (\n              <span>\n                {el.expiration.newer_noncurrent_expiration_versions} versions\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        <HelpTip\n          content={\n            <Fragment>\n              MinIO derives it’s behavior and syntax from{\" \"}\n              <a\n                target=\"blank\"\n                href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\"\n              >\n                S3 lifecycle\n              </a>{\" \"}\n              for compatibility in migrating workloads and lifecycle rules from\n              S3 to MinIO.\n            </Fragment>\n          }\n          placement=\"right\"\n        >\n          Lifecycle Rules\n        </HelpTip>\n      </SectionTitle>\n      <Grid container>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketLifecyclePanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["_ref","onCloseAndRefresh","deleteOpen","bucket","id","dispatch","useAppDispatch","deletingRule","setDeletingRule","useState","useEffect","api","buckets","deleteBucketLifecycleRule","then","catch","err","setErrorSnackMessage","errorToHandler","error","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","titleIcon","ConfirmDeleteIcon","onClose","confirmationContent","_jsxs","Fragment","children","_lifecycleRule$expira8","_lifecycleRule$expira9","_lifecycleRule$transi8","_lifecycleRule$transi9","_lifecycleRule$expira10","closeModalAndRefresh","selectedBucket","lifecycleRule","open","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","expiredAllVersionsDM","setExpiredAllVersionsDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","expandedAdv","setExpandedAdv","expanded","setExpanded","admin","res","get","data","length","objList","map","tier","tierType","type","value","concat","label","valid","_lifecycleRule$expira3","_lifecycleRule$expira4","status","transitionMode","_lifecycleRule$transi","_lifecycleRule$transi2","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$expira","_lifecycleRule$expira2","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","delete_all","tgs","reduce","stringLab","currItem","index","key","objectVersion","ModalWrapper","modalOpen","LifecycleConfigIcon","Loader","style","width","height","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","_lifecycleRule$expira5","_lifecycleRule$expira6","_lifecycleRule$expira7","expiry","parseInt","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$transi7","lifecycleUpdate","disable","expired_object_delete_marker","expired_object_delete_all","updateBucketLifecycle","async","eRes","json","saveRecord","FormLayout","containerPadding","withBorders","Switch","indicatorLabels","checked","name","onChange","target","InputBox","disabled","RadioGroup","currentValue","selectorOptions","disableOptions","min","Select","options","placeholder","Grid","item","xs","Accordion","onTitleClick","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","sx","marginTop","modalStyleUtils","modalButtonBar","Button","variant","onClick","color","ProgressBar","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","expiryUnit","setExpiryUnit","formFieldRowFilter","padding","getBucketVersioning","setModalErrorSnackMessage","container","addRecord","lifecycleInsert","addBucketLifecycle","helpTip","href","helpTipPlacement","validity","pattern","overlayObject","justifyContent","InputUnitMenu","unitSelected","unitsList","onUnitChange","newValue","HelpTip","content","placement","AlertIcon","IAM_PAGES","TIERS_ADD","textDecoration","description","BucketLifecyclePanel","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","newer_noncurrent_expiration_versions","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","SectionTitle","separator","marginBottom","actions","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","DataTable","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","rel","UnitMenuButton","styled","button","theme","border","borderRadius","backgroundColor","fontSize","_ref2","anchorEl","setAnchorEl","React","Boolean","handleClose","newUnit","undefined","currentTarget","DropdownSelector","selectedOption","onSelect","hideTriggerAction","anchorOrigin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","className","overlayIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","display","alignSelf","margin","fontWeight","InputLabel","Box","marginLeft","alignItems","Tooltip","HelpIcon","overflowY","position","ref"],"sourceRoot":""}