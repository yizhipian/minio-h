{"version":3,"file":"static/js/9987.15024980.chunk.js","mappings":"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","sources":["screens/Console/Configurations/TiersConfiguration/TierTypeCard.tsx","screens/Console/Configurations/TiersConfiguration/TierTypeSelector.tsx","screens/Console/Configurations/TiersConfiguration/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\nconst TierButtonBase = styled.button(({ theme }) => ({\n  background: get(theme, \"boxBackground\", \"#FFF\"),\n  border: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n  borderRadius: 5,\n  height: 80,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"start\",\n  marginBottom: 16,\n  marginRight: 8,\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  \"&:hover\": {\n    backgroundColor: get(theme, \"buttons.regular.hover.background\", \"#ebebeb\"),\n  },\n  \"& .imageContainer\": {\n    width: 80,\n    \"& .min-icon\": {\n      maxWidth: 46,\n      maxHeight: 46,\n    },\n  },\n  \"& .tierNotifTitle\": {\n    color: get(theme, \"buttons.callAction.enabled.background\", \"#07193E\"),\n    fontSize: 16,\n    fontFamily: \"Inter,sans-serif\",\n    paddingLeft: 18,\n    fontWeight: \"bold\",\n  },\n}));\n\ntype TierTypeCardProps = {\n  onClick: (name: string) => void;\n  icon?: any;\n  name: string;\n};\nconst TierTypeCard = ({ onClick, icon, name }: TierTypeCardProps) => {\n  return (\n    <TierButtonBase\n      onClick={() => {\n        onClick(name);\n      }}\n    >\n      <span className={\"imageContainer\"}>{icon}</span>\n      <span className={\"tierNotifTitle\"}>{name}</span>\n    </TierButtonBase>\n  );\n};\n\nexport default TierTypeCard;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { tierTypes } from \"./utils\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport TierTypeCard from \"./TierTypeCard\";\nimport {\n  BackLink,\n  Box,\n  breakPoints,\n  FormLayout,\n  HelpBox,\n  PageLayout,\n  TiersIcon,\n} from \"mds\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst TierTypeSelector = () => {\n  const navigate = useNavigate();\n\n  const typeSelect = (selectName: string) => {\n    navigate(`${IAM_PAGES.TIERS_ADD}/${selectName}`);\n  };\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"tier-type-selector\"));\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label=\"Tier Types\"\n              onClick={() => navigate(IAM_PAGES.TIERS)}\n            />\n          </Fragment>\n        }\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <FormLayout\n          title={\"Select Tier Type\"}\n          icon={<TiersIcon />}\n          helpBox={\n            <HelpBox\n              iconComponent={<TiersIcon />}\n              title={\"Tier Types\"}\n              help={\n                <Fragment>\n                  MinIO supports creating object transition lifecycle management\n                  rules, where MinIO can automatically move an object to a\n                  remote storage “tier”.\n                  <br />\n                  <br />\n                  MinIO supports the following Tier types:\n                  <br />\n                  <ul>\n                    <li>\n                      <a\n                        href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-s3.html#minio-lifecycle-management-transition-to-s3?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        MinIO or other S3-compatible storage\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-s3.html#minio-lifecycle-management-transition-to-s3?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        Amazon S3\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-gcs.html#minio-lifecycle-management-transition-to-gcs?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        Google Cloud Storage\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-azure.html#minio-lifecycle-management-transition-to-azure?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        Microsoft Azure Blob Storage\n                      </a>\n                    </li>\n                  </ul>\n                </Fragment>\n              }\n            />\n          }\n        >\n          <Box\n            sx={{\n              margin: \"15px\",\n              display: \"grid\",\n              gridGap: \"20px\",\n              gridTemplateColumns: \"repeat(2, 1fr)\",\n              [`@media (max-width: ${breakPoints.md}px)`]: {\n                gridTemplateColumns: \"repeat(1, 1fr)\",\n              },\n            }}\n          >\n            {tierTypes.map((tierType, index) => (\n              <TierTypeCard\n                key={`tierOpt-${index.toString}-${tierType.targetTitle}`}\n                name={tierType.targetTitle}\n                onClick={() => {\n                  typeSelect(tierType.serviceName);\n                }}\n                icon={tierType.logo}\n              />\n            ))}\n          </Box>\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default TierTypeSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  AzureTierIcon,\n  AzureTierIconXs,\n  GoogleTierIcon,\n  GoogleTierIconXs,\n  MinIOTierIcon,\n  MinIOTierIconXs,\n  S3TierIcon,\n  S3TierIconXs,\n} from \"mds\";\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: <MinIOTierIcon />,\n    logoXs: <MinIOTierIconXs />,\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: <GoogleTierIcon />,\n    logoXs: <GoogleTierIconXs />,\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: <S3TierIcon />,\n    logoXs: <S3TierIconXs />,\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: <AzureTierIcon />,\n    logoXs: <AzureTierIconXs />,\n  },\n];\n"],"names":["TierButtonBase","styled","button","_ref","theme","background","get","border","concat","borderRadius","height","display","alignItems","justifyContent","marginBottom","marginRight","cursor","overflow","backgroundColor","width","maxWidth","maxHeight","color","fontSize","fontFamily","paddingLeft","fontWeight","_ref2","onClick","icon","name","_jsxs","children","_jsx","className","TierTypeSelector","navigate","useNavigate","dispatch","useAppDispatch","useEffect","setHelpName","Fragment","PageHeaderWrapper","label","BackLink","IAM_PAGES","TIERS","actions","HelpMenu","PageLayout","FormLayout","title","TiersIcon","helpBox","HelpBox","iconComponent","help","href","target","rel","Box","sx","margin","gridGap","gridTemplateColumns","breakPoints","md","tierTypes","map","tierType","index","TierTypeCard","targetTitle","selectName","serviceName","TIERS_ADD","logo","toString","minioServiceName","gcsServiceName","s3ServiceName","azureServiceName","MinIOTierIcon","logoXs","MinIOTierIconXs","GoogleTierIcon","GoogleTierIconXs","S3TierIcon","S3TierIconXs","AzureTierIcon","AzureTierIconXs"],"sourceRoot":""}