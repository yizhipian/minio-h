{"version":3,"file":"static/js/3329.c2099208.chunk.js","mappings":"8PAmCA,MA8FA,EA9FmBA,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEVC,EAASC,IAAcC,EAAAA,EAAAA,UAAiB,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,WAAkB,GA2BtDG,EAA+B,KAAnBL,EAAQM,SAA2C,IAA1BN,EAAQO,QAAQ,KAE3D,OACEC,EAAAA,EAAAA,KAACC,EAAAA,IAAU,CAAAC,UACTF,EAAAA,EAAAA,KAACG,EAAAA,IAAU,CACTC,MAAO,aACPC,MAAML,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IACxBC,SACEP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CACTC,SAAU,iBACVC,SAAU,CACR,6FAGLR,UAEDF,EAAAA,EAAAA,KAAA,QACEW,YAAU,EACVC,aAAa,MACbC,SAAWC,IACCA,EA5CZC,iBACNnB,GAAiB,GACjBoB,EAAAA,EAAIC,IACDC,aAAa,CAAEC,IAAK3B,IACpB4B,MAAMC,IACL/B,EAAS,GAADgC,OAAIC,EAAAA,GAAUC,UAAW,IAElCC,OAAMC,UACL,MAAMC,QAAaC,EAAIC,OACvBzC,GAAS0C,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeJ,IAAM,IAEpDK,SAAQ,IAAMpC,GAAiB,IAiCd,EACZM,UAEF+B,EAAAA,EAAAA,MAACC,EAAAA,IAAI,CAACC,WAAS,EAAAjC,SAAA,EACbF,EAAAA,EAAAA,KAACkC,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAGnC,UAChBF,EAAAA,EAAAA,KAACsC,EAAAA,IAAQ,CACPC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,WAAW,EACXC,MAAOnD,EACPoD,MArCWpD,KACO,IAA1BA,EAAQO,QAAQ,KACX,iCACK,GAkCK8C,CAAgBrD,GACvBsD,SAAWhC,IACTrB,EAAWqB,EAAEiC,OAAOJ,MAAM,OAIhCV,EAAAA,EAAAA,MAACC,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAIW,GAAIC,EAAAA,GAAgBC,eAAehD,SAAA,EACpDF,EAAAA,EAAAA,KAACmD,EAAAA,IAAM,CACLZ,GAAI,QACJa,KAAK,SACLC,QAAQ,UACRC,QApDIC,KAChB9D,EAAW,GAAG,EAoDFgD,MAAO,WAGTzC,EAAAA,EAAAA,KAACmD,EAAAA,IAAM,CACLZ,GAAI,WACJa,KAAK,SACLC,QAAQ,aACRG,MAAM,UACNC,SAAU9D,IAAkBE,EAC5B4C,MAAO,oBAMN,E,0BCnGjB,MA2BA,EA3BeiB,KACb,MAAMtE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,OALAoE,EAAAA,EAAAA,YAAU,KACRvE,GAASwE,EAAAA,EAAAA,IAAY,WAAW,GAE/B,KAGD5D,EAAAA,EAAAA,KAAC6D,EAAAA,SAAQ,CAAA3D,UACP+B,EAAAA,EAAAA,MAACC,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAGnC,SAAA,EAChBF,EAAAA,EAAAA,KAAC8D,EAAAA,EAAiB,CAChBrB,OACEzC,EAAAA,EAAAA,KAAC+D,EAAAA,IAAQ,CACPtB,MAAO,OACPa,QAASA,IAAMhE,EAASiC,EAAAA,GAAUC,YAGtCwC,SAAShE,EAAAA,EAAAA,KAACiE,EAAAA,EAAQ,OAEpBjE,EAAAA,EAAAA,KAACb,EAAU,QAEJ,C,wECzBf,MAgBA,EAhBmB+E,IAA+C,IAA9C,SAAEzD,EAAQ,SAAEC,GAA4BwD,EAC1D,OACElE,EAAAA,EAAAA,KAACmE,EAAAA,IAAO,CACNC,eAAepE,EAAAA,EAAAA,KAACqE,EAAAA,IAAc,IAC9BjE,MAAOK,EACP6D,MACEtE,EAAAA,EAAAA,KAAC6D,EAAAA,SAAQ,CAAA3D,SACNQ,EAAS6D,KAAKC,IACbxE,EAAAA,EAAAA,KAACyE,EAAAA,IAAG,CAACzB,GAAI,CAAE0B,cAAe,QAASxE,SAAEsE,SAI3C,C","sources":["screens/Console/KMS/AddKeyForm.tsx","screens/Console/KMS/AddKey.tsx","screens/Console/KMS/KMSHelpbox.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport {\n  AddAccessRuleIcon,\n  Button,\n  FormLayout,\n  PageLayout,\n  Grid,\n  InputBox,\n} from \"mds\";\nimport { modalStyleUtils } from \"../Common/FormComponents/common/styleLibrary\";\nimport KMSHelpBox from \"./KMSHelpbox\";\nimport { api } from \"api\";\nimport { useAppDispatch } from \"store\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ApiError, HttpResponse } from \"api/consoleApi\";\nimport { setErrorSnackMessage } from \"systemSlice\";\nimport { errorToHandler } from \"api/errors\";\nimport { IAM_PAGES } from \"common/SecureComponent/permissions\";\n\nconst AddKeyForm = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [keyName, setKeyName] = useState<string>(\"\");\n  const [loadingCreate, setLoadingCreate] = useState<boolean>(false);\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    setLoadingCreate(true);\n    api.kms\n      .kmsCreateKey({ key: keyName })\n      .then((_) => {\n        navigate(`${IAM_PAGES.KMS_KEYS}`);\n      })\n      .catch(async (res: HttpResponse<void, ApiError>) => {\n        const err = (await res.json()) as ApiError;\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n      })\n      .finally(() => setLoadingCreate(false));\n  };\n\n  const resetForm = () => {\n    setKeyName(\"\");\n  };\n\n  const validateKeyName = (keyName: string) => {\n    if (keyName.indexOf(\" \") !== -1) {\n      return \"Key name cannot contain spaces\";\n    } else return \"\";\n  };\n\n  const validSave = keyName.trim() !== \"\" && keyName.indexOf(\" \") === -1;\n\n  return (\n    <PageLayout>\n      <FormLayout\n        title={\"Create Key\"}\n        icon={<AddAccessRuleIcon />}\n        helpBox={\n          <KMSHelpBox\n            helpText={\"Encryption Key\"}\n            contents={[\n              \"Create a new cryptographic key in the Key Management Service server connected to MINIO.\",\n            ]}\n          />\n        }\n      >\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            addRecord(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <InputBox\n                id=\"key-name\"\n                name=\"key-name\"\n                label=\"Key Name\"\n                autoFocus={true}\n                value={keyName}\n                error={validateKeyName(keyName)}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setKeyName(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"clear\"}\n                type=\"button\"\n                variant=\"regular\"\n                onClick={resetForm}\n                label={\"Clear\"}\n              />\n\n              <Button\n                id={\"save-key\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={loadingCreate || !validSave}\n                label={\"Save\"}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </FormLayout>\n    </PageLayout>\n  );\n};\n\nexport default AddKeyForm;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { BackLink, Grid } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { useAppDispatch } from \"../../../store\";\nimport AddKeyForm from \"./AddKeyForm\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\nimport { setHelpName } from \"systemSlice\";\n\nconst AddKey = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add_key\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              label={\"Keys\"}\n              onClick={() => navigate(IAM_PAGES.KMS_KEYS)}\n            />\n          }\n          actions={<HelpMenu />}\n        />\n        <AddKeyForm />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AddKey;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpBox, HelpIconFilled, Box } from \"mds\";\n\ninterface IKMSHelpBoxProps {\n  helpText: string;\n  contents: string[];\n}\n\nconst KMSHelpBox = ({ helpText, contents }: IKMSHelpBoxProps) => {\n  return (\n    <HelpBox\n      iconComponent={<HelpIconFilled />}\n      title={helpText}\n      help={\n        <Fragment>\n          {contents.map((content) => (\n            <Box sx={{ paddingBottom: \"20px\" }}>{content}</Box>\n          ))}\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default KMSHelpBox;\n"],"names":["AddKeyForm","dispatch","useAppDispatch","navigate","useNavigate","keyName","setKeyName","useState","loadingCreate","setLoadingCreate","validSave","trim","indexOf","_jsx","PageLayout","children","FormLayout","title","icon","AddAccessRuleIcon","helpBox","KMSHelpBox","helpText","contents","noValidate","autoComplete","onSubmit","e","preventDefault","api","kms","kmsCreateKey","key","then","_","concat","IAM_PAGES","KMS_KEYS","catch","async","err","res","json","setErrorSnackMessage","errorToHandler","finally","_jsxs","Grid","container","item","xs","InputBox","id","name","label","autoFocus","value","error","validateKeyName","onChange","target","sx","modalStyleUtils","modalButtonBar","Button","type","variant","onClick","resetForm","color","disabled","AddKey","useEffect","setHelpName","Fragment","PageHeaderWrapper","BackLink","actions","HelpMenu","_ref","HelpBox","iconComponent","HelpIconFilled","help","map","content","Box","paddingBottom"],"sourceRoot":""}