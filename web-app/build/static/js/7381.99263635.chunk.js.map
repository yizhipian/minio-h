{"version":3,"file":"static/js/7381.99263635.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/License/LicensePlans.tsx","screens/Console/License/License.tsx","screens/Console/Support/RegistrationStatusBanner.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","//  This file is part of MinIO Console Server\n//  Copyright (c) 2022 MinIO, Inc.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU Affero General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU Affero General Public License for more details.\n//\n//  You should have received a copy of the GNU Affero General Public License\n//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  AGPLV3Logo,\n  Box,\n  breakPoints,\n  Button,\n  CheckCircleIcon,\n  ConsoleEnterprise,\n  ConsoleStandard,\n  LicenseDocIcon,\n} from \"mds\";\nimport { SubnetInfo } from \"./types\";\nimport {\n  COMMUNITY_PLAN_FEATURES,\n  ENTERPRISE_PLAN_FEATURES,\n  FEATURE_ITEMS,\n  getRenderValue,\n  LICENSE_PLANS,\n  PAID_PLANS,\n  STANDARD_PLAN_FEATURES,\n} from \"./utils\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IRegisterStatus {\n  activateProductModal: any;\n  closeModalAndFetchLicenseInfo: any;\n  licenseInfo: SubnetInfo | undefined;\n  currentPlanID: number;\n  setActivateProductModal: any;\n}\n\nconst PlanListContainer = styled.div(({ theme }) => ({\n  display: \"grid\",\n\n  margin: \"0 1.5rem 0 1.5rem\",\n\n  gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n\n  [`@media (max-width: ${breakPoints.sm}px)`]: {\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n  },\n\n  \"&.paid-plans-only\": {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n  },\n\n  \"& .features-col\": {\n    flex: 1,\n    minWidth: \"260px\",\n\n    \"@media (max-width: 600px)\": {\n      display: \"none\",\n    },\n  },\n\n  \"& .xs-only\": {\n    display: \"none\",\n  },\n\n  \"& .button-box\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"5px 0px 25px 0px\",\n    borderLeft: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n  },\n  \"& .plan-header\": {\n    height: \"99px\",\n    borderBottom: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n  },\n  \"& .feature-title\": {\n    height: \"25px\",\n    paddingLeft: \"26px\",\n    fontSize: \"14px\",\n\n    background: get(theme, \"signalColors.disabled\", \"#E5E5E5\"),\n    color: get(theme, \"signalColors.main\", \"#07193E\"),\n\n    \"@media (max-width: 600px)\": {\n      \"& .feature-title-info .xs-only\": {\n        display: \"block\",\n      },\n    },\n  },\n  \"& .feature-name\": {\n    minHeight: \"60px\",\n    padding: \"5px\",\n    borderBottom: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: \"26px\",\n    fontSize: \"14px\",\n  },\n  \"& .feature-item\": {\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"60px\",\n    padding: \"0 15px 0 15px\",\n    borderBottom: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n    borderLeft: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n    fontSize: \"14px\",\n    \"& .link-text\": {\n      color: \"#2781B0\",\n      cursor: \"pointer\",\n      textDecoration: \"underline\",\n    },\n\n    \"&.icon-yes\": {\n      width: \"15px\",\n      height: \"15px\",\n    },\n  },\n\n  \"& .feature-item-info\": {\n    flex: 1,\n    display: \"flex\",\n    flexFlow: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    textAlign: \"center\",\n\n    \"@media (max-width: 600px)\": {\n      justifyContent: \"space-evenly\",\n      width: \"100%\",\n      \"& .xs-only\": {\n        display: \"block\",\n      },\n      \"& .plan-feature\": {\n        textAlign: \"center\",\n        paddingRight: \"10px\",\n      },\n    },\n  },\n\n  \"& .plan-col\": {\n    minWidth: \"260px\",\n    flex: 1,\n  },\n\n  \"& .active-plan-col\": {\n    background: `${get(\n      theme,\n      \"boxBackground\",\n      \"#FDFDFD\",\n    )} 0% 0% no-repeat padding-box`,\n    boxShadow: \" 0px 3px 20px #00000038\",\n\n    \"& .plan-header\": {\n      backgroundColor: get(theme, \"signalColors.info\", \"#2781B0\"),\n    },\n\n    \"& .feature-title\": {\n      background: get(theme, \"signalColors.disabled\", \"#E5E5E5\"),\n      color: get(theme, \"fontColor\", \"#000\"),\n    },\n  },\n}));\n\nconst PlanHeaderContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"flex-start\",\n  justifyContent: \"center\",\n  flexFlow: \"column\",\n  borderLeft: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n  borderBottom: \"0px !important\",\n  \"& .plan-header\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexFlow: \"column\",\n  },\n\n  \"& .title-block\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexFlow: \"column\",\n    width: \"100%\",\n    \"& .title-main\": {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1,\n    },\n    \"& .iconContainer\": {\n      \"& .min-icon\": {\n        minWidth: 140,\n        width: \"100%\",\n        maxHeight: 55,\n        height: \"100%\",\n      },\n    },\n  },\n\n  \"& .open-source\": {\n    fontSize: \"14px\",\n    display: \"flex\",\n    marginBottom: \"5px\",\n    alignItems: \"center\",\n    \"& .min-icon\": {\n      marginRight: \"8px\",\n      height: \"12px\",\n      width: \"12px\",\n    },\n  },\n\n  \"& .cur-plan-text\": {\n    fontSize: \"12px\",\n    textTransform: \"uppercase\",\n  },\n\n  \"@media (max-width: 600px)\": {\n    cursor: \"pointer\",\n    \"& .title-block\": {\n      \"& .title\": {\n        fontSize: \"14px\",\n        fontWeight: 600,\n      },\n    },\n  },\n\n  \"&.active, &.active.xs-active\": {\n    color: \"#ffffff\",\n    position: \"relative\",\n\n    \"& .min-icon\": {\n      fill: \"#ffffff\",\n    },\n\n    \"&:before\": {\n      content: \"' '\",\n      position: \"absolute\",\n      width: \"100%\",\n      height: \"18px\",\n      backgroundColor: get(theme, \"signalColors.info\", \"#2781B0\"),\n      display: \"block\",\n      top: -16,\n    },\n    \"& .iconContainer\": {\n      \"& .min-icon\": {\n        marginTop: \"-12px\",\n      },\n    },\n  },\n  \"&.active\": {\n    backgroundColor: get(theme, \"signalColors.info\", \"#2781B0\"),\n    color: \"#ffffff\",\n  },\n  \"&.xs-active\": {\n    background: \"#eaeaea\",\n  },\n}));\n\nconst ListContainer = styled.div(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#EAEAEA\")}`,\n  borderTop: \"0px\",\n  marginBottom: \"45px\",\n  \"&::-webkit-scrollbar\": {\n    width: \"5px\",\n    height: \"5px\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    background: \"#F0F0F0\",\n    borderRadius: 0,\n    boxShadow: \"inset 0px 0px 0px 0px #F0F0F0\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"#777474\",\n    borderRadius: 0,\n  },\n  \"&::-webkit-scrollbar-thumb:hover\": {\n    background: \"#5A6375\",\n  },\n}));\n\nconst PlanHeader = ({\n  isActive,\n  isXsViewActive,\n  title,\n  onClick,\n  children,\n}: {\n  isActive: boolean;\n  isXsViewActive: boolean;\n  title: string;\n  price?: string;\n  onClick: any;\n  children: any;\n}) => {\n  const plan = title.toLowerCase();\n  return (\n    <PlanHeaderContainer\n      className={clsx({\n        \"plan-header\": true,\n        active: isActive,\n        [`xs-active`]: isXsViewActive,\n      })}\n      onClick={() => {\n        onClick && onClick(plan);\n      }}\n    >\n      {children}\n    </PlanHeaderContainer>\n  );\n};\n\nconst FeatureTitleRowCmp = (props: { featureLabel: any }) => {\n  return (\n    <Box className=\"feature-title\">\n      <Box className=\"feature-title-info\">\n        <div className=\"xs-only\">{props.featureLabel} </div>\n      </Box>\n    </Box>\n  );\n};\n\nconst PricingFeatureItem = (props: {\n  featureLabel: any;\n  label?: any;\n  detail?: any;\n  xsLabel?: string;\n  style?: any;\n}) => {\n  return (\n    <Box className=\"feature-item\" style={props.style}>\n      <Box className=\"feature-item-info\">\n        <div className=\"xs-only\">\n          {getRenderValue(props.featureLabel || \"\")}\n        </div>\n        <Box className=\"plan-feature\">\n          <div>{getRenderValue(props.label || \"\")}</div>\n          {getRenderValue(props.detail)}\n\n          <div className=\"xs-only\">{props.xsLabel} </div>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst LicensePlans = ({ licenseInfo }: IRegisterStatus) => {\n  const [isSmallScreen, setIsSmallScreen] = useState<boolean>(\n    window.innerWidth >= breakPoints.sm,\n  );\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      let extMD = false;\n      if (window.innerWidth >= breakPoints.sm) {\n        extMD = true;\n      }\n      setIsSmallScreen(extMD);\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []);\n\n  let currentPlan = !licenseInfo\n    ? \"community\"\n    : licenseInfo?.plan?.toLowerCase();\n\n  const isCommunityPlan = currentPlan === LICENSE_PLANS.COMMUNITY;\n  const isStandardPlan = currentPlan === LICENSE_PLANS.STANDARD;\n  const isEnterprisePlan = currentPlan === LICENSE_PLANS.ENTERPRISE;\n\n  const isPaidPlan = PAID_PLANS.includes(currentPlan);\n\n  /*In smaller screen use tabbed view to show features*/\n  const [xsPlanView, setXsPlanView] = useState(\"\");\n  let isXsViewCommunity = xsPlanView === LICENSE_PLANS.COMMUNITY;\n  let isXsViewStandard = xsPlanView === LICENSE_PLANS.STANDARD;\n  let isXsViewEnterprise = xsPlanView === LICENSE_PLANS.ENTERPRISE;\n\n  const getCommunityPlanHeader = () => {\n    return (\n      <PlanHeader\n        key={\"community-header\"}\n        isActive={isCommunityPlan}\n        isXsViewActive={isXsViewCommunity}\n        title={\"community\"}\n        onClick={isSmallScreen ? onPlanClick : null}\n      >\n        <Box className=\"title-block\">\n          <Box className=\"title-main\">\n            <div className=\"iconContainer\">\n              <AGPLV3Logo style={{ width: 117 }} />\n            </div>\n          </Box>\n        </Box>\n      </PlanHeader>\n    );\n  };\n\n  const getStandardPlanHeader = () => {\n    return (\n      <PlanHeader\n        key={\"standard-header\"}\n        isActive={isStandardPlan}\n        isXsViewActive={isXsViewStandard}\n        title={\"Standard\"}\n        onClick={isSmallScreen ? onPlanClick : null}\n      >\n        <Box className=\"title-block\">\n          <Box className=\"title-main\">\n            <div className=\"iconContainer\">\n              <ConsoleStandard />\n            </div>\n          </Box>\n        </Box>\n      </PlanHeader>\n    );\n  };\n\n  const getEnterpriseHeader = () => {\n    return (\n      <PlanHeader\n        key={\"enterprise-header\"}\n        isActive={isEnterprisePlan}\n        isXsViewActive={isXsViewEnterprise}\n        title={\"Enterprise\"}\n        onClick={isSmallScreen ? onPlanClick : null}\n      >\n        <Box className=\"title-block\">\n          <Box className=\"title-main\">\n            <div className=\"iconContainer\">\n              <ConsoleEnterprise />\n            </div>\n          </Box>\n        </Box>\n      </PlanHeader>\n    );\n  };\n\n  const getButton = (\n    link: string,\n    btnText: string,\n    variant: any,\n    plan: string,\n  ) => {\n    let linkToNav =\n      currentPlan !== \"community\" ? \"https://subnet.min.io\" : link;\n    return (\n      <Button\n        id={`license-action-${link}`}\n        variant={variant}\n        style={{\n          marginTop: \"12px\",\n          width: \"80%\",\n        }}\n        disabled={\n          currentPlan !== LICENSE_PLANS.COMMUNITY && currentPlan !== plan\n        }\n        onClick={(e) => {\n          e.preventDefault();\n\n          window.open(`${linkToNav}?ref=con`, \"_blank\");\n        }}\n        label={btnText}\n      />\n    );\n  };\n\n  const onPlanClick = (plan: string) => {\n    setXsPlanView(plan);\n  };\n\n  useEffect(() => {\n    if (isSmallScreen) {\n      setXsPlanView(currentPlan || \"community\");\n    } else {\n      setXsPlanView(\"\");\n    }\n  }, [isSmallScreen, currentPlan]);\n\n  const featureList = FEATURE_ITEMS;\n  return (\n    <Fragment>\n      <ListContainer>\n        <Box\n          className={\"title-blue-bar\"}\n          sx={{\n            height: \"8px\",\n            borderBottom: \"8px solid rgb(6 48 83)\",\n          }}\n        />\n        <PlanListContainer className={isPaidPlan ? \"paid-plans-only\" : \"\"}>\n          <Box className=\"features-col\">\n            {featureList.map((fi) => {\n              const featureTitleRow = fi.featureTitleRow;\n              const isHeader = fi.isHeader;\n\n              if (isHeader) {\n                if (isPaidPlan) {\n                  return (\n                    <Box\n                      key={`plan-header-${fi.desc}`}\n                      className=\"plan-header\"\n                      sx={{\n                        fontSize: \"14px\",\n                        paddingLeft: \"26px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                        borderBottom: \"0px !important\",\n\n                        \"& .link-text\": {\n                          color: \"#2781B0\",\n                          cursor: \"pointer\",\n                          textDecoration: \"underline\",\n                        },\n\n                        \"& .min-icon\": {\n                          marginRight: \"10px\",\n                          color: \"#2781B0\",\n                          fill: \"#2781B0\",\n                        },\n                      }}\n                    >\n                      <LicenseDocIcon />\n                      <a\n                        href={`https://subnet.min.io/terms-and-conditions/${currentPlan}`}\n                        rel=\"noopener\"\n                        className={\"link-text\"}\n                      >\n                        View License agreement <br />\n                        for the registered plan.\n                      </a>\n                    </Box>\n                  );\n                }\n\n                return (\n                  <Box\n                    key={`plan-header-label-${fi.desc}`}\n                    className={`plan-header`}\n                    sx={{\n                      fontSize: \"14px\",\n                      paddingLeft: \"26px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                      borderBottom: \"0px !important\",\n                    }}\n                  >\n                    {fi.label}\n                  </Box>\n                );\n              }\n              if (featureTitleRow) {\n                return (\n                  <Box\n                    key={`plan-descript-${fi.desc}`}\n                    className=\"feature-title\"\n                    sx={{\n                      fontSize: \"14px\",\n                      fontWeight: 600,\n                      textTransform: \"uppercase\",\n                    }}\n                  >\n                    <div>{getRenderValue(fi.desc)} </div>\n                  </Box>\n                );\n              }\n              return (\n                <Box\n                  key={`plan-feature-name-${fi.desc}`}\n                  className=\"feature-name\"\n                  style={fi.style}\n                >\n                  <div>{getRenderValue(fi.desc)} </div>\n                </Box>\n              );\n            })}\n          </Box>\n          {!isPaidPlan ? (\n            <Box\n              className={`plan-col ${\n                isCommunityPlan ? \"active-plan-col\" : \"non-active-plan-col\"\n              }`}\n            >\n              {COMMUNITY_PLAN_FEATURES.map((fi, idx) => {\n                const featureLabel = featureList[idx].desc;\n                const { featureTitleRow, isHeader } = fi;\n\n                if (isHeader) {\n                  return getCommunityPlanHeader();\n                }\n\n                if (featureTitleRow) {\n                  return (\n                    <FeatureTitleRowCmp\n                      key={`title-row-${fi.id}`}\n                      featureLabel={featureLabel}\n                    />\n                  );\n                }\n\n                return (\n                  <PricingFeatureItem\n                    key={`pricing-feature-${fi.id}`}\n                    featureLabel={featureLabel}\n                    label={fi.label}\n                    detail={fi.detail}\n                    xsLabel={fi.xsLabel}\n                    style={fi.style}\n                  />\n                );\n              })}\n              <Box className=\"button-box\">\n                {getButton(\n                  `https://slack.min.io`,\n                  \"Join Slack\",\n                  \"regular\",\n                  LICENSE_PLANS.COMMUNITY,\n                )}\n              </Box>\n            </Box>\n          ) : null}\n          <Box\n            className={`plan-col ${\n              isStandardPlan ? \"active-plan-col\" : \"non-active-plan-col\"\n            }`}\n          >\n            {STANDARD_PLAN_FEATURES.map((fi, idx) => {\n              const featureLabel = featureList[idx].desc;\n              const featureTitleRow = fi.featureTitleRow;\n              const isHeader = fi.isHeader;\n\n              if (isHeader) {\n                return getStandardPlanHeader();\n              }\n\n              if (featureTitleRow) {\n                return (\n                  <FeatureTitleRowCmp\n                    key={`feature-title-row-${fi.id}`}\n                    featureLabel={featureLabel}\n                  />\n                );\n              }\n              return (\n                <PricingFeatureItem\n                  key={`feature-item-${fi.id}`}\n                  featureLabel={featureLabel}\n                  label={fi.label}\n                  detail={fi.detail}\n                  xsLabel={fi.xsLabel}\n                  style={fi.style}\n                />\n              );\n            })}\n\n            <Box className=\"button-box\">\n              {getButton(\n                `https://min.io/signup`,\n                !PAID_PLANS.includes(currentPlan)\n                  ? \"Subscribe\"\n                  : \"Login to SUBNET\",\n                \"callAction\",\n                LICENSE_PLANS.STANDARD,\n              )}\n            </Box>\n          </Box>\n          <Box\n            className={`plan-col ${\n              isEnterprisePlan ? \"active-plan-col\" : \"non-active-plan-col\"\n            }`}\n          >\n            {ENTERPRISE_PLAN_FEATURES.map((fi, idx) => {\n              const featureLabel = featureList[idx].desc;\n              const { featureTitleRow, isHeader, yesIcon } = fi;\n\n              if (isHeader) {\n                return getEnterpriseHeader();\n              }\n\n              if (featureTitleRow) {\n                return (\n                  <FeatureTitleRowCmp\n                    key={`feature-title-row2-${fi.id}`}\n                    featureLabel={featureLabel}\n                  />\n                );\n              }\n\n              if (yesIcon) {\n                return (\n                  <Box className=\"feature-item\" key={`ent-feature-yes${fi.id}`}>\n                    <Box className=\"feature-item-info\">\n                      <div className=\"xs-only\"></div>\n                      <Box className=\"plan-feature\">\n                        <CheckCircleIcon />\n                      </Box>\n                    </Box>\n                  </Box>\n                );\n              }\n              return (\n                <PricingFeatureItem\n                  key={`pricing-feature-item-${fi.id}`}\n                  featureLabel={featureLabel}\n                  label={fi.label}\n                  detail={fi.detail}\n                  style={fi.style}\n                />\n              );\n            })}\n            <Box className=\"button-box\">\n              {getButton(\n                `https://min.io/signup`,\n                !PAID_PLANS.includes(currentPlan)\n                  ? \"Subscribe\"\n                  : \"Login to SUBNET\",\n                \"callAction\",\n                LICENSE_PLANS.ENTERPRISE,\n              )}\n            </Box>\n          </Box>\n        </PlanListContainer>\n      </ListContainer>\n    </Fragment>\n  );\n};\n\nexport default LicensePlans;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { ArrowIcon, Button, PageLayout, ProgressBar, Grid } from \"mds\";\nimport { SubnetInfo } from \"./types\";\nimport api from \"../../../common/api\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport LicensePlans from \"./LicensePlans\";\nimport { useNavigate } from \"react-router-dom\";\nimport RegistrationStatusBanner from \"../Support/RegistrationStatusBanner\";\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport { getLicenseConsent } from \"./utils\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\nimport { setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\nconst LicenseConsentModal = withSuspense(\n  React.lazy(() => import(\"./LicenseConsentModal\")),\n);\n\nconst License = () => {\n  const navigate = useNavigate();\n  const [activateProductModal, setActivateProductModal] =\n    useState<boolean>(false);\n\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\n  const [currentPlanID, setCurrentPlanID] = useState<number>(0);\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(false);\n  const [initialLicenseLoading, setInitialLicenseLoading] =\n    useState<boolean>(true);\n  useState<boolean>(false);\n  const [clusterRegistered, setClusterRegistered] = useState<boolean>(false);\n\n  const [isLicenseConsentOpen, setIsLicenseConsentOpen] =\n    useState<boolean>(false);\n\n  const closeModalAndFetchLicenseInfo = () => {\n    setActivateProductModal(false);\n    fetchLicenseInfo();\n  };\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"license\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isRegistered = licenseInfo && clusterRegistered;\n\n  const isAgplConsentDone = getLicenseConsent();\n\n  useEffect(() => {\n    const shouldConsent =\n      !isRegistered && !isAgplConsentDone && !initialLicenseLoading;\n\n    if (shouldConsent && !loadingLicenseInfo) {\n      setIsLicenseConsentOpen(true);\n    }\n  }, [\n    isRegistered,\n    isAgplConsentDone,\n    initialLicenseLoading,\n    loadingLicenseInfo,\n  ]);\n\n  const fetchLicenseInfo = useCallback(() => {\n    if (loadingLicenseInfo) {\n      return;\n    }\n    setLoadingLicenseInfo(true);\n    api\n      .invoke(\"GET\", `/api/v1/subnet/info`)\n      .then((res: SubnetInfo) => {\n        if (res) {\n          if (res.plan === \"STANDARD\") {\n            setCurrentPlanID(1);\n          } else if (res.plan === \"ENTERPRISE\") {\n            setCurrentPlanID(2);\n          } else {\n            setCurrentPlanID(1);\n          }\n          setLicenseInfo(res);\n        }\n        setClusterRegistered(true);\n        setLoadingLicenseInfo(false);\n      })\n      .catch(() => {\n        setClusterRegistered(false);\n        setLoadingLicenseInfo(false);\n      });\n  }, [loadingLicenseInfo]);\n\n  useEffect(() => {\n    if (initialLicenseLoading) {\n      fetchLicenseInfo();\n      setInitialLicenseLoading(false);\n    }\n  }, [fetchLicenseInfo, initialLicenseLoading, setInitialLicenseLoading]);\n\n  if (loadingLicenseInfo) {\n    return (\n      <Grid item xs={12}>\n        <ProgressBar />\n      </Grid>\n    );\n  }\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label=\"MinIO License and Support plans\"\n        actions={\n          <Fragment>\n            {!isRegistered && (\n              <Button\n                id={\"login-with-subnet\"}\n                onClick={() => navigate(IAM_PAGES.REGISTER_SUPPORT)}\n                style={{\n                  fontSize: \"14px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  textDecoration: \"none\",\n                }}\n                icon={<ArrowIcon />}\n                variant={\"callAction\"}\n              >\n                Register your cluster\n              </Button>\n            )}\n            <HelpMenu />\n          </Fragment>\n        }\n      />\n\n      <PageLayout>\n        <Grid item xs={12}>\n          {isRegistered && (\n            <RegistrationStatusBanner email={licenseInfo?.email} />\n          )}\n        </Grid>\n\n        <LicensePlans\n          activateProductModal={activateProductModal}\n          closeModalAndFetchLicenseInfo={closeModalAndFetchLicenseInfo}\n          licenseInfo={licenseInfo}\n          currentPlanID={currentPlanID}\n          setActivateProductModal={setActivateProductModal}\n        />\n\n        <LicenseConsentModal\n          isOpen={isLicenseConsentOpen}\n          onClose={() => {\n            setIsLicenseConsentOpen(false);\n          }}\n        />\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default License;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { VerifiedIcon, Box, breakPoints } from \"mds\";\n\nconst RegistrationStatusBanner = ({ email = \"\" }: { email?: string }) => {\n  return (\n    <Box\n      sx={{\n        height: 67,\n        color: \"#ffffff\",\n        display: \"flex\",\n        position: \"relative\",\n        top: -30,\n        left: -32,\n        width: \"calc(100% + 64px)\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#2781B0\",\n        padding: \"0 25px 0 25px\",\n        \"& .registered-box, .reg-badge-box\": {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n        },\n\n        \"& .reg-badge-box\": {\n          marginLeft: \"20px\",\n\n          \"& .min-icon\": {\n            fill: \"#2781B0\",\n          },\n        },\n      }}\n    >\n      <Box className=\"registered-box\">\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Register status:</Box>\n        <Box className=\"reg-badge-box\">\n          <VerifiedIcon />\n          <Box\n            sx={{\n              fontWeight: 600,\n            }}\n          >\n            Registered\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        className=\"registered-acc-box\"\n        sx={{\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          display: \"flex\",\n          [`@media (max-width: ${breakPoints.sm}px)`]: {\n            display: \"none\",\n          },\n        }}\n      >\n        <Box sx={{ fontSize: \"16px\", fontWeight: 400 }}>Registered to:</Box>\n        <Box sx={{ marginLeft: \"8px\", fontWeight: 600 }}>{email}</Box>\n      </Box>\n    </Box>\n  );\n};\nexport default RegistrationStatusBanner;\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","PlanListContainer","styled","div","_ref","theme","display","margin","gridTemplateColumns","concat","breakPoints","sm","flex","minWidth","alignItems","justifyContent","padding","borderLeft","get","height","borderBottom","paddingLeft","fontSize","background","color","minHeight","flexFlow","cursor","textDecoration","width","textAlign","paddingRight","boxShadow","backgroundColor","PlanHeaderContainer","_ref2","maxHeight","marginBottom","marginRight","textTransform","fontWeight","position","fill","content","top","marginTop","ListContainer","_ref3","border","borderTop","borderRadius","PlanHeader","_ref4","isActive","isXsViewActive","title","onClick","plan","toLowerCase","className","clsx","active","FeatureTitleRowCmp","Box","_jsxs","featureLabel","PricingFeatureItem","style","getRenderValue","label","detail","xsLabel","_ref5","_licenseInfo$plan","licenseInfo","isSmallScreen","setIsSmallScreen","useState","window","innerWidth","useEffect","handleWindowResize","extMD","addEventListener","removeEventListener","currentPlan","isCommunityPlan","LICENSE_PLANS","COMMUNITY","isStandardPlan","STANDARD","isEnterprisePlan","ENTERPRISE","isPaidPlan","PAID_PLANS","includes","xsPlanView","setXsPlanView","isXsViewCommunity","isXsViewStandard","isXsViewEnterprise","getButton","link","btnText","variant","linkToNav","Button","id","disabled","e","preventDefault","open","onPlanClick","featureList","FEATURE_ITEMS","Fragment","sx","map","fi","featureTitleRow","isHeader","LicenseDocIcon","href","rel","desc","COMMUNITY_PLAN_FEATURES","idx","AGPLV3Logo","STANDARD_PLAN_FEATURES","ConsoleStandard","ENTERPRISE_PLAN_FEATURES","yesIcon","ConsoleEnterprise","CheckCircleIcon","LicenseConsentModal","withSuspense","React","License","navigate","useNavigate","activateProductModal","setActivateProductModal","setLicenseInfo","currentPlanID","setCurrentPlanID","loadingLicenseInfo","setLoadingLicenseInfo","initialLicenseLoading","setInitialLicenseLoading","clusterRegistered","setClusterRegistered","isLicenseConsentOpen","setIsLicenseConsentOpen","dispatch","useAppDispatch","setHelpName","isRegistered","isAgplConsentDone","getLicenseConsent","fetchLicenseInfo","useCallback","api","invoke","then","res","catch","Grid","item","xs","ProgressBar","PageHeaderWrapper","actions","IAM_PAGES","REGISTER_SUPPORT","icon","ArrowIcon","HelpMenu","PageLayout","RegistrationStatusBanner","email","LicensePlans","closeModalAndFetchLicenseInfo","isOpen","onClose","left","marginLeft","VerifiedIcon"],"sourceRoot":""}