{"version":3,"file":"static/js/689.d9f80e6e.chunk.js","mappings":"oQAkBA,MA6BA,EA7BkC,CAChC,CAAEA,MAAO,iBAAkBC,MAAO,aAClC,CAAED,MAAO,wBAAyBC,MAAO,aACzC,CAAED,MAAO,0BAA2BC,MAAO,aAC3C,CAAED,MAAO,mBAAoBC,MAAO,aACpC,CAAED,MAAO,qBAAsBC,MAAO,cACtC,CAAED,MAAO,8BAA+BC,MAAO,aAC/C,CAAED,MAAO,yBAA0BC,MAAO,kBAC1C,CAAED,MAAO,wBAAyBC,MAAO,cACzC,CAAED,MAAO,uBAAwBC,MAAO,kBACxC,CAAED,MAAO,uBAAwBC,MAAO,kBACxC,CAAED,MAAO,2BAA4BC,MAAO,kBAC5C,CAAED,MAAO,wBAAyBC,MAAO,kBACzC,CAAED,MAAO,uBAAwBC,MAAO,kBACxC,CAAED,MAAO,mBAAoBC,MAAO,gBACpC,CAAED,MAAO,kBAAmBC,MAAO,cACnC,CAAED,MAAO,kBAAmBC,MAAO,kBACnC,CAAED,MAAO,qBAAsBC,MAAO,gBACtC,CAAED,MAAO,mBAAoBC,MAAO,aACpC,CAAED,MAAO,kBAAmBC,MAAO,aACnC,CAAED,MAAO,iBAAkBC,MAAO,cAClC,CAAED,MAAO,iBAAkBC,MAAO,aAClC,CAAED,MAAO,qBAAsBC,MAAO,cACtC,CAAED,MAAO,+BAA6BC,MAAO,aAC7C,CAAED,MAAO,wBAAyBC,MAAO,cACzC,CAAED,MAAO,yBAA0BC,MAAO,iBAC1C,CAAED,MAAO,yBAA0BC,MAAO,kBCM5C,EAhCmC,CACjC,CAAED,MAAO,cAAYC,MAAO,2BAC5B,CAAED,MAAO,UAAWC,MAAO,2BAC3B,CAAED,MAAO,OAAQC,MAAO,eACxB,CAAED,MAAO,iBAAkBC,MAAO,YAClC,CAAED,MAAO,oBAAqBC,MAAO,YACrC,CAAED,MAAO,SAAUC,MAAO,YAC1B,CAAED,MAAO,cAAeC,MAAO,YAC/B,CAAED,MAAO,iBAAkBC,MAAO,YAClC,CAAED,MAAO,YAAaC,MAAO,YAC7B,CAAED,MAAO,eAAaC,MAAO,sBAC7B,CAAED,MAAO,WAAYC,MAAO,sBAC5B,CAAED,MAAO,SAAUC,MAAO,mBAC1B,CAAED,MAAO,UAAWC,MAAO,iBAC3B,CAAED,MAAO,UAAWC,MAAO,gBAC3B,CAAED,MAAO,SAAUC,MAAO,gBAC1B,CAAED,MAAO,YAAaC,MAAO,gBAC7B,CAAED,MAAO,cAAeC,MAAO,gBAC/B,CAAED,MAAO,YAAUC,MAAO,gBAC1B,CAAED,MAAO,SAAUC,MAAO,cAC1B,CAAED,MAAO,YAAaC,MAAO,cAC7B,CAAED,MAAO,QAASC,MAAO,mBACzB,CAAED,MAAO,QAASC,MAAO,mBACzB,CAAED,MAAO,QAASC,MAAO,mBACzB,CAAED,MAAO,SAAUC,MAAO,eAC1B,CAAED,MAAO,QAASC,MAAO,eACzB,CAAED,MAAO,YAAaC,MAAO,mBAC7B,CAAED,MAAO,UAAWC,MAAO,mBAC3B,CAAED,MAAO,SAAUC,MAAO,wBAC1B,CAAED,MAAO,YAAaC,MAAO,yBCiR/B,EA9SqC,CACnC,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,eACPC,MAAO,eAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,oBACPC,MAAO,oBAET,CACED,MAAO,sBACPC,MAAO,qBAET,CACED,MAAO,iBACPC,MAAO,iBAET,CACED,MAAO,sBACPC,MAAO,sBAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,eACPC,MAAO,eAET,CACED,MAAO,mBACPC,MAAO,mBAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,iBACPC,MAAO,iBAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,gBACPC,MAAO,gBAET,CACED,MAAO,aACPC,MAAO,aAET,CACED,MAAO,qBACPC,MAAO,kBAET,CACED,MAAO,kBACPC,MAAO,iBAET,CACED,MAAO,YACPC,MAAO,YAET,CACED,MAAO,oBACPC,MAAO,iBAET,CACED,MAAO,UACPC,MAAO,UAET,CACED,MAAO,kBACPC,MAAO,eAET,CACED,MAAO,YACPC,MAAO,WAET,CACED,MAAO,oBACPC,MAAO,gBAET,CACED,MAAO,iBACPC,MAAO,eAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,iBACPC,MAAO,iBAET,CACED,MAAO,eACPC,MAAO,eAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,gBACPC,MAAO,gBAET,CACED,MAAO,uBACPC,MAAO,sBAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,aAET,CACED,MAAO,oBACPC,MAAO,mBAET,CACED,MAAO,iBACPC,MAAO,gBAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,gBACPC,MAAO,gBAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,mBACPC,MAAO,kBAET,CACED,MAAO,2BACPC,MAAO,uBAET,CACED,MAAO,eACPC,MAAO,eAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,eACPC,MAAO,eAET,CACED,MAAO,qBACPC,MAAO,oBAET,CACED,MAAO,oBACPC,MAAO,mBAET,CACED,MAAO,mBACPC,MAAO,kBAET,CACED,MAAO,2BACPC,MAAO,uBAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,iBACPC,MAAO,iBAET,CACED,MAAO,yBACPC,MAAO,sBAET,CACED,MAAO,iBACPC,MAAO,iBAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,oBACPC,MAAO,oBAET,CACED,MAAO,mBACPC,MAAO,mBAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,YAET,CACED,MAAO,WACPC,MAAO,WAET,CACED,MAAO,UACPC,MAAO,UAET,CACED,MAAO,uBACPC,MAAO,OAET,CACED,MAAO,iBACPC,MAAO,MAET,CACED,MAAO,gBACPC,MAAO,gBAET,CACED,MAAO,qBACPC,MAAO,oBAET,CACED,MAAO,kBACPC,MAAO,iBAET,CACED,MAAO,cACPC,M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","sources":["screens/Console/Configurations/TiersConfiguration/s3-regions.tsx","screens/Console/Configurations/TiersConfiguration/gcs-regions.ts","screens/Console/Configurations/TiersConfiguration/azure-regions.ts","screens/Console/Configurations/TiersConfiguration/RegionSelectWrapper.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx","screens/Console/Configurations/TiersConfiguration/utils.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SelectorType } from \"mds\";\n\nconst s3Regions: SelectorType[] = [\n  { label: \"US East (Ohio)\", value: \"us-east-2\" },\n  { label: \"US East (N. Virginia)\", value: \"us-east-1\" },\n  { label: \"US West (N. California)\", value: \"us-west-1\" },\n  { label: \"US West (Oregon)\", value: \"us-west-2\" },\n  { label: \"Africa (Cape Town)\", value: \"af-south-1\" },\n  { label: \"Asia Pacific (Hong Kong)***\", value: \"ap-east-1\" },\n  { label: \"Asia Pacific (Jakarta)\", value: \"ap-southeast-3\" },\n  { label: \"Asia Pacific (Mumbai)\", value: \"ap-south-1\" },\n  { label: \"Asia Pacific (Osaka)\", value: \"ap-northeast-3\" },\n  { label: \"Asia Pacific (Seoul)\", value: \"ap-northeast-2\" },\n  { label: \"Asia Pacific (Singapore)\", value: \"ap-southeast-1\" },\n  { label: \"Asia Pacific (Sydney)\", value: \"ap-southeast-2\" },\n  { label: \"Asia Pacific (Tokyo)\", value: \"ap-northeast-1\" },\n  { label: \"Canada (Central)\", value: \"ca-central-1\" },\n  { label: \"China (Beijing)\", value: \"cn-north-1\" },\n  { label: \"China (Ningxia)\", value: \"cn-northwest-1\" },\n  { label: \"Europe (Frankfurt)\", value: \"eu-central-1\" },\n  { label: \"Europe (Ireland)\", value: \"eu-west-1\" },\n  { label: \"Europe (London)\", value: \"eu-west-2\" },\n  { label: \"Europe (Milan)\", value: \"eu-south-1\" },\n  { label: \"Europe (Paris)\", value: \"eu-west-3\" },\n  { label: \"Europe (Stockholm)\", value: \"eu-north-1\" },\n  { label: \"South America (São Paulo)\", value: \"sa-east-1\" },\n  { label: \"Middle East (Bahrain)\", value: \"me-south-1\" },\n  { label: \"AWS GovCloud (US-East)\", value: \"us-gov-east-1\" },\n  { label: \"AWS GovCloud (US-West)\", value: \"us-gov-west-1\" },\n];\n\nexport default s3Regions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SelectorType } from \"mds\";\n\nconst gcsRegions: SelectorType[] = [\n  { label: \"Montréal\", value: \"NORTHAMERICA-NORTHEAST1\" },\n  { label: \"Toronto\", value: \"NORTHAMERICA-NORTHEAST2\" },\n  { label: \"Iowa\", value: \"US-CENTRAL1\" },\n  { label: \"South Carolina\", value: \"US-EAST1\" },\n  { label: \"Northern Virginia\", value: \"US-EAST4\" },\n  { label: \"Oregon\", value: \"US-WEST1\" },\n  { label: \"Los Angeles\", value: \"US-WEST2\" },\n  { label: \"Salt Lake City\", value: \"US-WEST3\" },\n  { label: \"Las Vegas\", value: \"US-WEST4\" },\n  { label: \"São Paulo\", value: \"SOUTHAMERICA-EAST1\" },\n  { label: \"Santiago\", value: \"SOUTHAMERICA-WEST1\" },\n  { label: \"Warsaw\", value: \"EUROPE-CENTRAL2\" },\n  { label: \"Finland\", value: \"EUROPE-NORTH1\" },\n  { label: \"Belgium\", value: \"EUROPE-WEST1\" },\n  { label: \"London\", value: \"EUROPE-WEST2\" },\n  { label: \"Frankfurt\", value: \"EUROPE-WEST3\" },\n  { label: \"Netherlands\", value: \"EUROPE-WEST4\" },\n  { label: \"Zürich\", value: \"EUROPE-WEST6\" },\n  { label: \"Taiwan\", value: \"ASIA-EAST1\" },\n  { label: \"Hong Kong\", value: \"ASIA-EAST2\" },\n  { label: \"Tokyo\", value: \"ASIA-NORTHEAST1\" },\n  { label: \"Osaka\", value: \"ASIA-NORTHEAST2\" },\n  { label: \"Seoul\", value: \"ASIA-NORTHEAST3\" },\n  { label: \"Mumbai\", value: \"ASIA-SOUTH1\" },\n  { label: \"Delhi\", value: \"ASIA-SOUTH2\" },\n  { label: \"Singapore\", value: \"ASIA-SOUTHEAST1\" },\n  { label: \"Jakarta\", value: \"ASIA-SOUTHEAST2\" },\n  { label: \"Sydney\", value: \"AUSTRALIA-SOUTHEAST1\" },\n  { label: \"Melbourne\", value: \"AUSTRALIA-SOUTHEAST2\" },\n];\n\nexport default gcsRegions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SelectorType } from \"mds\";\n\nconst azureRegions: SelectorType[] = [\n  {\n    label: \"Asia\",\n    value: \"asia\",\n  },\n  {\n    label: \"Asia Pacific\",\n    value: \"asiapacific\",\n  },\n  {\n    label: \"Australia\",\n    value: \"australia\",\n  },\n  {\n    label: \"Australia Central\",\n    value: \"australiacentral\",\n  },\n  {\n    label: \"Australia Central 2\",\n    value: \"australiacentral2\",\n  },\n  {\n    label: \"Australia East\",\n    value: \"australiaeast\",\n  },\n  {\n    label: \"Australia Southeast\",\n    value: \"australiasoutheast\",\n  },\n  {\n    label: \"Brazil\",\n    value: \"brazil\",\n  },\n  {\n    label: \"Brazil South\",\n    value: \"brazilsouth\",\n  },\n  {\n    label: \"Brazil Southeast\",\n    value: \"brazilsoutheast\",\n  },\n  {\n    label: \"Canada\",\n    value: \"canada\",\n  },\n  {\n    label: \"Canada Central\",\n    value: \"canadacentral\",\n  },\n  {\n    label: \"Canada East\",\n    value: \"canadaeast\",\n  },\n  {\n    label: \"Central India\",\n    value: \"centralindia\",\n  },\n  {\n    label: \"Central US\",\n    value: \"centralus\",\n  },\n  {\n    label: \"Central US (Stage)\",\n    value: \"centralusstage\",\n  },\n  {\n    label: \"Central US EUAP\",\n    value: \"centraluseuap\",\n  },\n  {\n    label: \"East Asia\",\n    value: \"eastasia\",\n  },\n  {\n    label: \"East Asia (Stage)\",\n    value: \"eastasiastage\",\n  },\n  {\n    label: \"East US\",\n    value: \"eastus\",\n  },\n  {\n    label: \"East US (Stage)\",\n    value: \"eastusstage\",\n  },\n  {\n    label: \"East US 2\",\n    value: \"eastus2\",\n  },\n  {\n    label: \"East US 2 (Stage)\",\n    value: \"eastus2stage\",\n  },\n  {\n    label: \"East US 2 EUAP\",\n    value: \"eastus2euap\",\n  },\n  {\n    label: \"Europe\",\n    value: \"europe\",\n  },\n  {\n    label: \"France\",\n    value: \"france\",\n  },\n  {\n    label: \"France Central\",\n    value: \"francecentral\",\n  },\n  {\n    label: \"France South\",\n    value: \"francesouth\",\n  },\n  {\n    label: \"Germany\",\n    value: \"germany\",\n  },\n  {\n    label: \"Germany North\",\n    value: \"germanynorth\",\n  },\n  {\n    label: \"Germany West Central\",\n    value: \"germanywestcentral\",\n  },\n  {\n    label: \"Global\",\n    value: \"global\",\n  },\n  {\n    label: \"India\",\n    value: \"india\",\n  },\n  {\n    label: \"Japan\",\n    value: \"japan\",\n  },\n  {\n    label: \"Japan East\",\n    value: \"japaneast\",\n  },\n  {\n    label: \"Japan West\",\n    value: \"japanwest\",\n  },\n  {\n    label: \"Jio India Central\",\n    value: \"jioindiacentral\",\n  },\n  {\n    label: \"Jio India West\",\n    value: \"jioindiawest\",\n  },\n  {\n    label: \"Korea\",\n    value: \"korea\",\n  },\n  {\n    label: \"Korea Central\",\n    value: \"koreacentral\",\n  },\n  {\n    label: \"Korea South\",\n    value: \"koreasouth\",\n  },\n  {\n    label: \"North Central US\",\n    value: \"northcentralus\",\n  },\n  {\n    label: \"North Central US (Stage)\",\n    value: \"northcentralusstage\",\n  },\n  {\n    label: \"North Europe\",\n    value: \"northeurope\",\n  },\n  {\n    label: \"Norway\",\n    value: \"norway\",\n  },\n  {\n    label: \"Norway East\",\n    value: \"norwayeast\",\n  },\n  {\n    label: \"Norway West\",\n    value: \"norwaywest\",\n  },\n  {\n    label: \"South Africa\",\n    value: \"southafrica\",\n  },\n  {\n    label: \"South Africa North\",\n    value: \"southafricanorth\",\n  },\n  {\n    label: \"South Africa West\",\n    value: \"southafricawest\",\n  },\n  {\n    label: \"South Central US\",\n    value: \"southcentralus\",\n  },\n  {\n    label: \"South Central US (Stage)\",\n    value: \"southcentralusstage\",\n  },\n  {\n    label: \"South India\",\n    value: \"southindia\",\n  },\n  {\n    label: \"Southeast Asia\",\n    value: \"southeastasia\",\n  },\n  {\n    label: \"Southeast Asia (Stage)\",\n    value: \"southeastasiastage\",\n  },\n  {\n    label: \"Sweden Central\",\n    value: \"swedencentral\",\n  },\n  {\n    label: \"Switzerland\",\n    value: \"switzerland\",\n  },\n  {\n    label: \"Switzerland North\",\n    value: \"switzerlandnorth\",\n  },\n  {\n    label: \"Switzerland West\",\n    value: \"switzerlandwest\",\n  },\n  {\n    label: \"UAE Central\",\n    value: \"uaecentral\",\n  },\n  {\n    label: \"UAE North\",\n    value: \"uaenorth\",\n  },\n  {\n    label: \"UK South\",\n    value: \"uksouth\",\n  },\n  {\n    label: \"UK West\",\n    value: \"ukwest\",\n  },\n  {\n    label: \"United Arab Emirates\",\n    value: \"uae\",\n  },\n  {\n    label: \"United Kingdom\",\n    value: \"uk\",\n  },\n  {\n    label: \"United States\",\n    value: \"unitedstates\",\n  },\n  {\n    label: \"United States EUAP\",\n    value: \"unitedstateseuap\",\n  },\n  {\n    label: \"West Central US\",\n    value: \"westcentralus\",\n  },\n  {\n    label: \"West Europe\",\n    value: \"westeurope\",\n  },\n  {\n    label: \"West India\",\n    value: \"westindia\",\n  },\n  {\n    label: \"West US\",\n    value: \"westus\",\n  },\n  {\n    label: \"West US (Stage)\",\n    value: \"westusstage\",\n  },\n  {\n    label: \"West US 2\",\n    value: \"westus2\",\n  },\n  {\n    label: \"West US 2 (Stage)\",\n    value: \"westus2stage\",\n  },\n  {\n    label: \"West US 3\",\n    value: \"westus3\",\n  },\n];\nexport default azureRegions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Autocomplete, InputBox, SelectorType } from \"mds\";\n\nimport s3Regions from \"./s3-regions\";\nimport gcsRegions from \"./gcs-regions\";\nimport azRegions from \"./azure-regions\";\n\nconst getRegions = (type: string): any => {\n  let regions: SelectorType[] = [];\n\n  if (type === \"s3\") {\n    regions = s3Regions;\n  }\n  if (type === \"gcs\") {\n    regions = gcsRegions;\n  }\n  if (type === \"azure\") {\n    regions = azRegions;\n  }\n\n  return regions.map((item) => ({\n    value: item.value,\n    label: `${item.label} - ${item.value}`,\n  }));\n};\n\ninterface RegionSelectBoxProps {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | boolean;\n  id: string;\n  disabled?: boolean;\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\";\n  tooltip?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst RegionSelectWrapper = ({\n  label,\n  onChange,\n  type,\n  tooltip = \"\",\n  required = false,\n  disabled,\n  placeholder,\n}: RegionSelectBoxProps) => {\n  const regionList = getRegions(type);\n  const [value, setValue] = useState<string>(\"\");\n\n  if (type === \"minio\") {\n    return (\n      <InputBox\n        label={label}\n        disabled={disabled}\n        required={required}\n        tooltip={tooltip}\n        value={value}\n        placeholder={placeholder}\n        id={\"region-list\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n      />\n    );\n  }\n\n  return (\n    <Autocomplete\n      label={label}\n      disabled={disabled}\n      required={required}\n      tooltip={tooltip}\n      options={regionList}\n      value={value}\n      placeholder={placeholder}\n      id={\"region-list\"}\n      onChange={(newValue) => {\n        setValue(newValue);\n        onChange(newValue);\n      }}\n    />\n  );\n};\n\nexport default RegionSelectWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport {\n  BackLink,\n  breakPoints,\n  Button,\n  FileSelector,\n  Grid,\n  InputBox,\n  PageLayout,\n  SectionTitle,\n} from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { ApiError } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  azureServiceName,\n  gcsServiceName,\n  minioServiceName,\n  s3ServiceName,\n  tierTypes,\n} from \"./utils\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport RegionSelectWrapper from \"./RegionSelectWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst AddTierConfiguration = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  //Local States\n  const [saving, setSaving] = useState<boolean>(false);\n\n  // Form Items\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState<string>(\"\");\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\n\n  const type = get(params, \"service\", \"s3\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\n\n  // Extra validation functions\n\n  const validName = useCallback(() => {\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\n    if (patternAgainst.test(name)) {\n      setNameInputError(\"\");\n      return true;\n    }\n\n    setNameInputError(\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\",\n    );\n    return false;\n  }, [name]);\n\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      let request = {};\n      let fields = {\n        name,\n        endpoint,\n        bucket,\n        prefix,\n        region,\n      };\n\n      let tierType = type;\n\n      switch (type) {\n        case \"minio\":\n          request = {\n            minio: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n            },\n          };\n          break;\n        case \"s3\":\n          request = {\n            s3: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n              storageclass: storageClass,\n            },\n          };\n          break;\n        case \"gcs\":\n          request = {\n            gcs: {\n              ...fields,\n              creds: encodedCreds,\n            },\n          };\n          break;\n        case \"azure\":\n          request = {\n            azure: {\n              ...fields,\n              accountname: accountName,\n              accountkey: accountKey,\n            },\n          };\n      }\n\n      let payload = {\n        type: tierType as\n          | \"azure\"\n          | \"s3\"\n          | \"minio\"\n          | \"gcs\"\n          | \"unsupported\"\n          | undefined,\n        ...request,\n      };\n\n      api.admin\n        .addTier(payload)\n        .then(() => {\n          setSaving(false);\n          navigate(IAM_PAGES.TIERS);\n        })\n        .catch(async (res) => {\n          const err = (await res.json()) as ApiError;\n          setSaving(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    name,\n    prefix,\n    region,\n    saving,\n    secretKey,\n    dispatch,\n    storageClass,\n    type,\n    navigate,\n  ]);\n\n  useEffect(() => {\n    let valid = true;\n    if (type === \"\") {\n      valid = false;\n    }\n    if (name === \"\" || !validName()) {\n      valid = false;\n    }\n    if (endpoint === \"\") {\n      valid = false;\n    }\n    if (bucket === \"\") {\n      valid = false;\n    }\n    if (prefix === \"\") {\n      valid = false;\n    }\n    if (region === \"\" && type !== \"minio\") {\n      valid = false;\n    }\n\n    if (type === \"s3\" || type === \"minio\") {\n      if (accessKey === \"\") {\n        valid = false;\n      }\n      if (secretKey === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"azure\") {\n      if (accountName === \"\") {\n        valid = false;\n      }\n      if (accountKey === \"\") {\n        valid = false;\n      }\n    }\n\n    setIsFormValid(valid);\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    isFormValid,\n    name,\n    prefix,\n    region,\n    secretKey,\n    storageClass,\n    type,\n    validName,\n  ]);\n\n  useEffect(() => {\n    switch (type) {\n      case \"gcs\":\n        setEndpoint(\"https://storage.googleapis.com\");\n        setTitleSelection(\"Google Cloud\");\n        break;\n      case \"s3\":\n        setEndpoint(\"https://s3.amazonaws.com\");\n        setTitleSelection(\"Amazon S3\");\n        break;\n      case \"azure\":\n        setEndpoint(\"http://blob.core.windows.net\");\n        setTitleSelection(\"Azure\");\n        break;\n      case \"minio\":\n        setEndpoint(\"\");\n        setTitleSelection(\"MinIO\");\n    }\n  }, [type]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  // Input actions\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value.toUpperCase());\n  };\n\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add-tier-configuration\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label={\"Add Tier\"}\n              onClick={() => navigate(IAM_PAGES.TIERS_ADD)}\n            />\n          </Fragment>\n        }\n        actions={<HelpMenu />}\n      />\n\n      <PageLayout>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            border: \"1px solid #eaeaea\",\n            padding: \"25px\",\n          }}\n        >\n          <form noValidate onSubmit={submitForm}>\n            {type !== \"\" && targetElement ? (\n              <SectionTitle icon={targetElement.logo} sx={{ marginBottom: 20 }}>\n                {titleSelection ? titleSelection : \"\"} - Add Tier Configuration\n              </SectionTitle>\n            ) : null}\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"grid\",\n                gridTemplateColumns: \"1fr 1fr\",\n                gridAutoFlow: \"row\",\n                gridRowGap: 20,\n                gridColumnGap: 50,\n                [`@media (max-width: ${breakPoints.sm}px)`]: {\n                  gridTemplateColumns: \"1fr\",\n                  gridAutoFlow: \"dense\",\n                },\n              }}\n            >\n              {type !== \"\" && (\n                <Fragment>\n                  <InputBox\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\n                    value={name}\n                    onChange={updateTierName}\n                    error={nameInputError}\n                    required\n                  />\n                  <InputBox\n                    id=\"endpoint\"\n                    name=\"endpoint\"\n                    label=\"Endpoint\"\n                    placeholder=\"Enter Endpoint\"\n                    value={endpoint}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setEndpoint(e.target.value);\n                    }}\n                    required\n                  />\n                  {(type === s3ServiceName || type === minioServiceName) && (\n                    <Fragment>\n                      <InputBox\n                        id=\"accessKey\"\n                        name=\"accessKey\"\n                        label=\"Access Key\"\n                        placeholder=\"Enter Access Key\"\n                        value={accessKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccessKey(e.target.value);\n                        }}\n                        required\n                      />\n                      <InputBox\n                        id=\"secretKey\"\n                        name=\"secretKey\"\n                        label=\"Secret Key\"\n                        placeholder=\"Enter Secret Key\"\n                        value={secretKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setSecretKey(e.target.value);\n                        }}\n                        required\n                      />\n                    </Fragment>\n                  )}\n                  {type === gcsServiceName && (\n                    <FileSelector\n                      accept=\".json\"\n                      id=\"creds\"\n                      label=\"Credentials\"\n                      name=\"creds\"\n                      returnEncodedData\n                      onChange={(_, fileName, encodedValue) => {\n                        if (encodedValue) {\n                          setEncodedCreds(encodedValue);\n                          setCreds(fileName);\n                        }\n                      }}\n                      value={creds}\n                      required\n                    />\n                  )}\n                  {type === azureServiceName && (\n                    <Fragment>\n                      <InputBox\n                        id=\"accountName\"\n                        name=\"accountName\"\n                        label=\"Account Name\"\n                        placeholder=\"Enter Account Name\"\n                        value={accountName}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountName(e.target.value);\n                        }}\n                        required\n                      />\n                      <InputBox\n                        id=\"accountKey\"\n                        name=\"accountKey\"\n                        label=\"Account Key\"\n                        placeholder=\"Enter Account Key\"\n                        value={accountKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountKey(e.target.value);\n                        }}\n                        required\n                      />\n                    </Fragment>\n                  )}\n                  <InputBox\n                    id=\"bucket\"\n                    name=\"bucket\"\n                    label=\"Bucket\"\n                    placeholder=\"Enter Bucket\"\n                    value={bucket}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setBucket(e.target.value);\n                    }}\n                    required\n                  />\n                  <InputBox\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    label=\"Prefix\"\n                    placeholder=\"Enter Prefix\"\n                    value={prefix}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    required\n                  />\n                  <RegionSelectWrapper\n                    onChange={(value) => {\n                      setRegion(value);\n                    }}\n                    required={type !== \"minio\"}\n                    label={\"Region\"}\n                    id=\"region\"\n                    type={type as \"azure\" | \"s3\" | \"minio\" | \"gcs\"}\n                  />\n                  {type === s3ServiceName && (\n                    <InputBox\n                      id=\"storageClass\"\n                      name=\"storageClass\"\n                      label=\"Storage Class\"\n                      placeholder=\"Enter Storage Class\"\n                      value={storageClass}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setStorageClass(e.target.value);\n                      }}\n                    />\n                  )}\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"save-tier-configuration\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={saving || !isFormValid}\n                label={\"Save Tier Configuration\"}\n              />\n            </Grid>\n          </form>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTierConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  AzureTierIcon,\n  AzureTierIconXs,\n  GoogleTierIcon,\n  GoogleTierIconXs,\n  MinIOTierIcon,\n  MinIOTierIconXs,\n  S3TierIcon,\n  S3TierIconXs,\n} from \"mds\";\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: <MinIOTierIcon />,\n    logoXs: <MinIOTierIconXs />,\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: <GoogleTierIcon />,\n    logoXs: <GoogleTierIconXs />,\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: <S3TierIcon />,\n    logoXs: <S3TierIconXs />,\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: <AzureTierIcon />,\n    logoXs: <AzureTierIconXs />,\n  },\n];\n"],"names":["label","value","_ref","onChange","type","tooltip","required","disabled","placeholder","regionList","regions","s3Regions","gcsRegions","azRegions","map","item","concat","getRegions","setValue","useState","_jsx","InputBox","id","e","target","Autocomplete","options","newValue","AddTierConfiguration","dispatch","useAppDispatch","navigate","useNavigate","params","useParams","saving","setSaving","name","setName","endpoint","setEndpoint","bucket","setBucket","prefix","setPrefix","region","setRegion","storageClass","setStorageClass","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","titleSelection","setTitleSelection","get","isFormValid","setIsFormValid","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","minio","accesskey","secretkey","s3","storageclass","gcs","azure","accountname","accountkey","payload","api","admin","addTier","then","IAM_PAGES","TIERS","catch","async","err","res","json","setErrorSnackMessage","errorToHandler","valid","targetElement","tierTypes","find","serviceName","setHelpName","_jsxs","Fragment","children","PageHeaderWrapper","BackLink","onClick","TIERS_ADD","actions","HelpMenu","PageLayout","Grid","xs","sx","border","padding","noValidate","onSubmit","event","preventDefault","SectionTitle","icon","logo","marginBottom","display","gridTemplateColumns","gridAutoFlow","gridRowGap","gridColumnGap","breakPoints","sm","toUpperCase","error","s3ServiceName","minioServiceName","gcsServiceName","FileSelector","accept","returnEncodedData","_","fileName","encodedValue","azureServiceName","RegionSelectWrapper","modalStyleUtils","modalButtonBar","Button","variant","targetTitle","MinIOTierIcon","logoXs","MinIOTierIconXs","GoogleTierIcon","GoogleTierIconXs","S3TierIcon","S3TierIconXs","AzureTierIcon","AzureTierIconXs"],"sourceRoot":""}