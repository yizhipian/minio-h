{"version":3,"file":"static/js/8825.e5adf924.chunk.js","mappings":"6NA+BA,MAwEA,EAxEuBA,IAIM,IAJL,2BACtBC,EAA0B,WAC1BC,EAAU,aACVC,GACqBH,EACrB,MAAMI,GAAWC,EAAAA,EAAAA,OAEVC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAkB,IACrDC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IAE3C,IAAKL,EACH,OAAO,KAkBT,OACEQ,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,aACLC,YAAa,SACbC,OAAQb,EACRc,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IAC7BC,UAAWZ,EACXa,UAtBoBC,KACtBb,GAAiB,GACjBc,EAAAA,EAAIC,IACDC,aAAapB,GACbqB,MAAMC,IACLxB,GAA2B,EAAK,IAEjCyB,OAAMC,UACL,MAAMC,QAAaC,EAAIC,OACvB1B,GAAS2B,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,GAAeJ,KAC7C3B,GAA2B,EAAM,IAElCgC,SAAQ,IAAM1B,GAAiB,IAAO,EAWvC2B,QA/BYA,IAAMjC,GAA2B,GAgC7CkC,mBAAoB,CAClBC,SAAU3B,IAAcN,GAAgBG,GAE1C+B,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACP7B,EAAAA,EAAAA,KAAC8B,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChB7B,EAAAA,EAAAA,KAACiC,EAAAA,IAAkB,CACjBC,QAAS,QACThC,MAAO,UACPiC,QACE,4KAEFC,GAAI,CAAEC,OAAQ,cAEX,4BACiBrC,EAAAA,EAAAA,KAAA,KAAA6B,SAAIrC,IAAiB,gBAC7CQ,EAAAA,EAAAA,KAAC8B,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChB7B,EAAAA,EAAAA,KAACsC,EAAAA,IAAQ,CACPC,GAAG,aACHC,KAAK,aACLC,SAAWC,IACT3C,EAAa2C,EAAMC,OAAOC,MAAM,EAElCC,QAAUC,GAAMA,EAAEC,iBAClBC,MAAM,GACNJ,MAAO9C,UAKf,C","sources":["screens/Console/KMS/DeleteKMSModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon, Grid, InformativeMessage, InputBox } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { ApiError, HttpResponse } from \"api/consoleApi\";\n\ninterface IDeleteKMSModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedItem: string;\n}\n\nconst DeleteKMSModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedItem,\n}: IDeleteKMSModalProps) => {\n  const dispatch = useAppDispatch();\n  const onClose = () => closeDeleteModalAndRefresh(false);\n  const [loadingDelete, setLoadingDelete] = useState<boolean>(false);\n  const [retypeKey, setRetypeKey] = useState(\"\");\n\n  if (!selectedItem) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    setLoadingDelete(true);\n    api.kms\n      .kmsDeleteKey(selectedItem)\n      .then((_) => {\n        closeDeleteModalAndRefresh(true);\n      })\n      .catch(async (res: HttpResponse<void, ApiError>) => {\n        const err = (await res.json()) as ApiError;\n        dispatch(setErrorSnackMessage(errorToHandler(err)));\n        closeDeleteModalAndRefresh(false);\n      })\n      .finally(() => setLoadingDelete(false));\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Key`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={loadingDelete}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeKey !== selectedItem || loadingDelete,\n      }}\n      confirmationContent={\n        <Fragment>\n          <Grid item xs={12}>\n            <InformativeMessage\n              variant={\"error\"}\n              title={\"WARNING\"}\n              message={\n                \"Please note that this is a dangerous operation. Once a key has been deleted all data that has been encrypted with it cannot be decrypted anymore, and therefore, is lost.\"\n              }\n              sx={{ margin: \"15px 0\" }}\n            />\n          </Grid>\n          To continue please type <b>{selectedItem}</b> in the box.\n          <Grid item xs={12}>\n            <InputBox\n              id=\"retype-key\"\n              name=\"retype-key\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeKey(event.target.value);\n              }}\n              onPaste={(e) => e.preventDefault()}\n              label=\"\"\n              value={retypeKey}\n            />\n          </Grid>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteKMSModal;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","selectedItem","dispatch","useAppDispatch","loadingDelete","setLoadingDelete","useState","retypeKey","setRetypeKey","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onConfirmDelete","api","kms","kmsDeleteKey","then","_","catch","async","err","res","json","setErrorSnackMessage","errorToHandler","finally","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","Fragment","children","Grid","item","xs","InformativeMessage","variant","message","sx","margin","InputBox","id","name","onChange","event","target","value","onPaste","e","preventDefault","label"],"sourceRoot":""}