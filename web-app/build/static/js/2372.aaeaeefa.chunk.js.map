{"version":3,"file":"static/js/2372.aaeaeefa.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/DateRangeSelector/DateRangeSelector.tsx","screens/Console/Logs/LogSearch/utils.ts","screens/Console/Common/FormComponents/FilterInputWrapper/FilterInputWrapper.tsx","screens/Console/Logs/LogSearch/LogSearchFullModal.tsx","screens/Console/Common/MissingIntegration/MissingIntegration.tsx","screens/Console/Logs/LogSearch/LogsSearchMain.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport {\n  Button,\n  SyncIcon,\n  Grid,\n  Box,\n  breakPoints,\n  TimeIcon,\n  DateTimeInput,\n} from \"mds\";\nimport { DateTime } from \"luxon\";\n\ninterface IDateRangeSelector {\n  timeStart: DateTime | null;\n  setTimeStart: (value: DateTime | null) => void;\n  timeEnd: DateTime | null;\n  setTimeEnd: (value: DateTime | null) => void;\n  triggerSync?: () => void;\n  label?: string;\n  startLabel?: string;\n  endLabel?: string;\n}\n\nconst DateRangeSelector = ({\n  timeStart,\n  setTimeStart,\n  timeEnd,\n  setTimeEnd,\n  triggerSync,\n  label = \"Filter:\",\n  startLabel = \"Start Time:\",\n  endLabel = \"End Time:\",\n}: IDateRangeSelector) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        \"& .filter-date-input-label, .end-time-input-label\": {\n          display: \"none\",\n        },\n        \"& .MuiInputBase-adornedEnd.filter-date-date-time-input\": {\n          width: \"100%\",\n          border: \"1px solid #eaeaea\",\n          paddingLeft: \"8px\",\n          paddingRight: \"8px\",\n          borderRadius: \"1px\",\n        },\n\n        \"& .MuiInputAdornment-root button\": {\n          height: \"20px\",\n          width: \"20px\",\n          marginRight: \"5px\",\n        },\n        \"& .filter-date-input-wrapper\": {\n          height: \"30px\",\n          width: \"100%\",\n\n          \"& .MuiTextField-root\": {\n            height: \"30px\",\n            width: \"90%\",\n\n            \"& input.Mui-disabled\": {\n              color: \"#000000\",\n              WebkitTextFillColor: \"#101010\",\n            },\n          },\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"grid\",\n          height: 40,\n          alignItems: \"center\",\n          gridTemplateColumns: \"auto 2fr auto\",\n          padding: 0,\n          [`@media (max-width: ${breakPoints.sm}px)`]: {\n            padding: 5,\n          },\n          [`@media (max-width: ${breakPoints.md}px)`]: {\n            gridTemplateColumns: \"1fr\",\n            height: \"auto\",\n          },\n          gap: \"5px\",\n        }}\n      >\n        <Box\n          sx={{ fontSize: \"14px\", fontWeight: 500, marginRight: \"5px\" }}\n          className={\"muted\"}\n        >\n          {label}\n        </Box>\n        <Box\n          customBorderPadding={\"0px\"}\n          sx={{\n            display: \"grid\",\n            height: 40,\n            alignItems: \"center\",\n            gridTemplateColumns: \"1fr 1fr\",\n            gap: \"8px\",\n            paddingLeft: \"8px\",\n            paddingRight: \"8px\",\n            [`@media (max-width: ${breakPoints.md}px)`]: {\n              height: \"auto\",\n              gridTemplateColumns: \"1fr\",\n            },\n          }}\n        >\n          <DateTimeInput\n            value={timeStart}\n            onChange={setTimeStart}\n            id=\"stTime\"\n            secondsSelector={false}\n            pickerStartComponent={\n              <Fragment>\n                <TimeIcon />\n                <span>{startLabel}</span>\n              </Fragment>\n            }\n          />\n          <DateTimeInput\n            value={timeEnd}\n            onChange={setTimeEnd}\n            id=\"endTime\"\n            secondsSelector={false}\n            pickerStartComponent={\n              <Fragment>\n                <TimeIcon />\n                <span>{endLabel}</span>\n              </Fragment>\n            }\n          />\n        </Box>\n\n        {triggerSync && (\n          <Box\n            sx={{\n              alignItems: \"flex-end\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"sync\"}\n              type=\"button\"\n              variant=\"callAction\"\n              onClick={triggerSync}\n              icon={<SyncIcon />}\n              label={\"Sync\"}\n            />\n          </Box>\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default DateRangeSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const LogSearchColumnLabels = {\n  time: \"Timestamp\",\n  api_name: \"API Name\",\n  access_key: \"Access Key\",\n  bucket: \"Bucket\",\n  object: \"Object\",\n  remote_host: \"Remote Host\",\n  request_id: \"Request ID\",\n  user_agent: \"User Agent\",\n  response_status: \"Response Status\",\n  response_status_code: \"Response Status Code\",\n  request_content_length: \"Request Content Length\",\n  response_content_length: \"Response Content Length\",\n  time_to_response_ns: \"Time to Response NS\",\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { InputBox, InputLabel, Box } from \"mds\";\n\ninterface IFilterInputWrapper {\n  value: string;\n  onChange: (txtVar: string) => any;\n  label: string;\n  placeholder?: string;\n  id: string;\n  name: string;\n}\n\nconst FilterInputWrapper = ({\n  label,\n  onChange,\n  value,\n  placeholder = \"\",\n  id,\n  name,\n}: IFilterInputWrapper) => {\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          flexGrow: 1,\n          margin: \"0 15px\",\n        }}\n      >\n        <InputLabel>{label}</InputLabel>\n        <InputBox\n          placeholder={placeholder}\n          id={id}\n          name={name}\n          label=\"\"\n          onChange={(val) => {\n            onChange(val.target.value);\n          }}\n          sx={{\n            \"& input\": {\n              height: 30,\n            },\n          }}\n          value={value}\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default FilterInputWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid } from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { IReqInfoSearchResults } from \"./types\";\nimport { LogSearchColumnLabels } from \"./utils\";\n\ninterface ILogSearchFullModal {\n  modalOpen: boolean;\n  logSearchElement: IReqInfoSearchResults;\n  onClose: () => void;\n}\n\nconst LogSearchFullModal = ({\n  modalOpen,\n  logSearchElement,\n  onClose,\n}: ILogSearchFullModal) => {\n  const jsonItems = Object.keys(logSearchElement);\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title=\"Full Log Information\"\n        onClose={() => {\n          onClose();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12}>\n            <table>\n              <tbody>\n                {jsonItems.map((objectKey: string, index: number) => (\n                  <tr key={`logSearch-${index.toString()}`}>\n                    <th\n                      style={{\n                        fontWeight: 700,\n                        paddingRight: \"10px\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {get(LogSearchColumnLabels, objectKey, `${objectKey}`)}\n                    </th>\n                    <td>{get(logSearchElement, objectKey, \"\")}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <Button\n              id={\"close-log-search\"}\n              variant=\"callAction\"\n              color=\"primary\"\n              onClick={onClose}\n              label={\"Close\"}\n            />\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default LogSearchFullModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpBox, Grid } from \"mds\";\n\ninterface IMissingIntegration {\n  iconComponent: any;\n  entity: string;\n  documentationLink: string;\n}\n\nconst MissingIntegration = ({\n  iconComponent,\n  entity,\n  documentationLink,\n}: IMissingIntegration) => {\n  return (\n    <Grid\n      container\n      sx={{\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Grid item xs={8}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Fragment>\n              This feature is not available.\n              <br />\n              Please configure{\" \"}\n              <a href={documentationLink} target=\"_blank\" rel=\"noopener\">\n                {entity}\n              </a>{\" \"}\n              first to use this feature.\n            </Fragment>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MissingIntegration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { CSSObject } from \"styled-components\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  DataTable,\n  ExpandOptionsButton,\n  Grid,\n  PageLayout,\n  SearchIcon,\n} from \"mds\";\nimport { DateTime } from \"luxon\";\nimport { IReqInfoSearchResults, ISearchResponse } from \"./types\";\nimport { niceBytes, nsToSeconds } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { LogSearchColumnLabels } from \"./utils\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport api from \"../../../../common/api\";\nimport FilterInputWrapper from \"../../Common/FormComponents/FilterInputWrapper/FilterInputWrapper\";\nimport LogSearchFullModal from \"./LogSearchFullModal\";\nimport DateRangeSelector from \"../../Common/FormComponents/DateRangeSelector/DateRangeSelector\";\nimport MissingIntegration from \"../../Common/MissingIntegration/MissingIntegration\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst filtersContainer: CSSObject = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: 12,\n};\n\nconst LogsSearchMain = () => {\n  const dispatch = useAppDispatch();\n  const features = useSelector(selFeatures);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [timeStart, setTimeStart] = useState<DateTime | null>(null);\n  const [timeEnd, setTimeEnd] = useState<DateTime | null>(null);\n  const [filterOpen, setFilterOpen] = useState<boolean>(false);\n  const [records, setRecords] = useState<IReqInfoSearchResults[]>([]);\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [apiName, setApiName] = useState<string>(\"\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [userAgent, setUserAgent] = useState<string>(\"\");\n  const [object, setObject] = useState<string>(\"\");\n  const [requestID, setRequestID] = useState<string>(\"\");\n  const [responseStatus, setResponseStatus] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\" | undefined>(\n    \"DESC\",\n  );\n  const [columnsShown, setColumnsShown] = useState<string[]>([\n    \"time\",\n    \"api_name\",\n    \"access_key\",\n    \"bucket\",\n    \"object\",\n    \"remote_host\",\n    \"request_id\",\n    \"user_agent\",\n    \"response_status\",\n  ]);\n  const [nextPage, setNextPage] = useState<number>(0);\n  const [alreadyFetching, setAlreadyFetching] = useState<boolean>(false);\n  const [logSearchExtrasOpen, setLogSearchExtrasOpen] =\n    useState<boolean>(false);\n  const [selectedItem, setSelectedItem] =\n    useState<IReqInfoSearchResults | null>(null);\n\n  let recordsResp: any = null;\n  const logSearchEnabled = features && features.includes(\"log-search\");\n\n  const fetchRecords = useCallback(() => {\n    if (!alreadyFetching && logSearchEnabled) {\n      setAlreadyFetching(true);\n      let queryParams = `${bucket !== \"\" ? `&fp=bucket:${bucket}` : \"\"}${\n        object !== \"\" ? `&fp=object:${object}` : \"\"\n      }${apiName !== \"\" ? `&fp=api_name:${apiName}` : \"\"}${\n        accessKey !== \"\" ? `&fp=access_key:${accessKey}` : \"\"\n      }${requestID !== \"\" ? `&fp=request_id:${requestID}` : \"\"}${\n        userAgent !== \"\" ? `&fp=user_agent:${userAgent}` : \"\"\n      }${responseStatus !== \"\" ? `&fp=response_status:${responseStatus}` : \"\"}`;\n\n      queryParams = queryParams.trim();\n\n      if (queryParams.endsWith(\",\")) {\n        queryParams = queryParams.slice(0, -1);\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/logs/search?q=reqinfo${\n            queryParams !== \"\" ? `${queryParams}` : \"\"\n          }&pageSize=100&pageNo=${nextPage}&order=${\n            sortOrder === \"DESC\" ? \"timeDesc\" : \"timeAsc\"\n          }${\n            timeStart !== null ? `&timeStart=${timeStart.toUTC().toISO()}` : \"\"\n          }${timeEnd !== null ? `&timeEnd=${timeEnd.toUTC().toISO()}` : \"\"}`,\n        )\n        .then((res: ISearchResponse) => {\n          const fetchedResults = res.results || [];\n\n          setLoading(false);\n          setAlreadyFetching(false);\n          setRecords(fetchedResults);\n          setNextPage(nextPage + 1);\n\n          if (recordsResp !== null) {\n            recordsResp();\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setAlreadyFetching(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    } else {\n      setLoading(false);\n      setAlreadyFetching(false);\n    }\n  }, [\n    alreadyFetching,\n    logSearchEnabled,\n    bucket,\n    object,\n    apiName,\n    accessKey,\n    requestID,\n    userAgent,\n    responseStatus,\n    nextPage,\n    sortOrder,\n    timeStart,\n    timeEnd,\n    recordsResp,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (loading) {\n      setRecords([]);\n      fetchRecords();\n    }\n  }, [loading, sortOrder, fetchRecords]);\n\n  const triggerLoad = () => {\n    setNextPage(0);\n    setLoading(true);\n  };\n\n  const selectColumn = (colID: string) => {\n    let newArray: string[];\n\n    const columnShown = columnsShown.findIndex((item) => item === colID);\n\n    // Column Exist, We remove from Array\n    if (columnShown >= 0) {\n      newArray = columnsShown.filter((element) => element !== colID);\n    } else {\n      // Column not visible, we include it in the array\n      newArray = [...columnsShown, colID];\n    }\n\n    setColumnsShown(newArray);\n  };\n\n  const sortChange = (sortData: any) => {\n    const newSortDirection = get(sortData, \"sortDirection\", \"DESC\");\n    setSortOrder(newSortDirection);\n    setNextPage(0);\n    setLoading(true);\n  };\n\n  const loadMoreRecords = (_: { startIndex: number; stopIndex: number }) => {\n    fetchRecords();\n    return new Promise((resolve) => {\n      recordsResp = resolve;\n    });\n  };\n\n  const openExtraInformation = (item: IReqInfoSearchResults) => {\n    setSelectedItem(item);\n    setLogSearchExtrasOpen(true);\n  };\n\n  const closeViewExtraInformation = () => {\n    setSelectedItem(null);\n    setLogSearchExtrasOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"audit_logs\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      {logSearchExtrasOpen && selectedItem !== null && (\n        <LogSearchFullModal\n          logSearchElement={selectedItem}\n          modalOpen={logSearchExtrasOpen}\n          onClose={closeViewExtraInformation}\n        />\n      )}\n\n      <PageHeaderWrapper label=\"Audit Logs\" actions={<HelpMenu />} />\n\n      <PageLayout>\n        {!logSearchEnabled ? (\n          <MissingIntegration\n            entity={\"Audit Logs\"}\n            iconComponent={<SearchIcon />}\n            documentationLink=\"https://min.io/docs/minio/windows/operations/monitoring/minio-logging.html?ref=con\"\n          />\n        ) : (\n          <Fragment>\n            {\" \"}\n            <Box withBorders sx={{ marginBottom: 15 }}>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: \"flex\",\n                  padding: 15,\n                  [`@media (max-width: ${breakPoints.lg}px)`]: {\n                    flexFlow: \"column\",\n                  },\n                }}\n              >\n                <Box>\n                  <DateRangeSelector\n                    setTimeEnd={(time) => setTimeEnd(time)}\n                    setTimeStart={(time) => setTimeStart(time)}\n                    timeEnd={timeEnd}\n                    timeStart={timeStart}\n                  />\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <ExpandOptionsButton\n                    label={`${filterOpen ? \"Hide\" : \"Show\"} advanced Filters`}\n                    open={filterOpen}\n                    onClick={() => {\n                      setFilterOpen(!filterOpen);\n                    }}\n                  />\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: filterOpen ? \"block\" : \"none\",\n                  overflowY: \"hidden\",\n                  marginBottom: filterOpen ? 12 : 0,\n                }}\n              >\n                <Box\n                  sx={{\n                    marginLeft: 15,\n                    marginBottom: 15,\n                    fontSize: 12,\n                    color: \"#9C9C9C\",\n                  }}\n                >\n                  Enable your preferred options to get filtered records.\n                  <br />\n                  You can use '*' to match any character, '.' to signify a\n                  single character or '\\' to scape an special character (E.g.\n                  mybucket-*)\n                </Box>\n                <Box sx={filtersContainer}>\n                  <FilterInputWrapper\n                    onChange={setBucket}\n                    value={bucket}\n                    label={\"Bucket\"}\n                    id=\"bucket\"\n                    name=\"bucket\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setApiName}\n                    value={apiName}\n                    label={\"API Name\"}\n                    id=\"api_name\"\n                    name=\"api_name\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setAccessKey}\n                    value={accessKey}\n                    label={\"Access Key\"}\n                    id=\"access_key\"\n                    name=\"access_key\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setUserAgent}\n                    value={userAgent}\n                    label={\"User Agent\"}\n                    id=\"user_agent\"\n                    name=\"user_agent\"\n                  />\n                </Box>\n                <Box sx={filtersContainer}>\n                  <FilterInputWrapper\n                    onChange={setObject}\n                    value={object}\n                    label={\"Object\"}\n                    id=\"object\"\n                    name=\"object\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setRequestID}\n                    value={requestID}\n                    label={\"Request ID\"}\n                    id=\"request_id\"\n                    name=\"request_id\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setResponseStatus}\n                    value={responseStatus}\n                    label={\"Response Status\"}\n                    id=\"response_status\"\n                    name=\"response_status\"\n                  />\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 15,\n                  padding: \"0 15px 0 15px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Button\n                  id={\"get-information\"}\n                  type=\"button\"\n                  variant=\"callAction\"\n                  onClick={triggerLoad}\n                  label={\"Get Information\"}\n                />\n              </Grid>\n            </Box>\n            <Grid item xs={12}>\n              <SecureComponent\n                scopes={[IAM_SCOPES.ADMIN_HEALTH_INFO]}\n                resource={CONSOLE_UI_RESOURCE}\n                errorProps={{ disabled: true }}\n              >\n                <DataTable\n                  columns={[\n                    {\n                      label: LogSearchColumnLabels.time,\n                      elementKey: \"time\",\n                      enableSort: true,\n                    },\n                    {\n                      label: LogSearchColumnLabels.api_name,\n                      elementKey: \"api_name\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.access_key,\n                      elementKey: \"access_key\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.bucket,\n                      elementKey: \"bucket\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.object,\n                      elementKey: \"object\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.remote_host,\n                      elementKey: \"remote_host\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.request_id,\n                      elementKey: \"request_id\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.user_agent,\n                      elementKey: \"user_agent\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.response_status,\n                      elementKey: \"response_status\",\n                      renderFunction: (element) => (\n                        <Fragment>\n                          <span>\n                            {element.response_status_code} (\n                            {element.response_status})\n                          </span>\n                        </Fragment>\n                      ),\n                      renderFullObject: true,\n                    },\n                    {\n                      label: LogSearchColumnLabels.request_content_length,\n                      elementKey: \"request_content_length\",\n                      renderFunction: niceBytes,\n                    },\n                    {\n                      label: LogSearchColumnLabels.response_content_length,\n                      elementKey: \"response_content_length\",\n                      renderFunction: niceBytes,\n                    },\n                    {\n                      label: LogSearchColumnLabels.time_to_response_ns,\n                      elementKey: \"time_to_response_ns\",\n                      renderFunction: nsToSeconds,\n                      contentTextAlign: \"right\",\n                    },\n                  ]}\n                  isLoading={loading}\n                  records={records}\n                  entityName=\"Logs\"\n                  customEmptyMessage={\n                    \"There is no information with this criteria\"\n                  }\n                  idField=\"request_id\"\n                  columnsSelector\n                  columnsShown={columnsShown}\n                  onColumnChange={selectColumn}\n                  customPaperHeight={\n                    filterOpen ? \"calc(100vh - 520px)\" : \"calc(100vh - 320px)\"\n                  }\n                  sortEnabled={{\n                    currentSort: \"time\",\n                    currentDirection: sortOrder,\n                    onSortClick: sortChange,\n                  }}\n                  infiniteScrollConfig={{\n                    recordsCount: 1000000,\n                    loadMoreRecords: loadMoreRecords,\n                  }}\n                  itemActions={[\n                    {\n                      type: \"view\",\n                      onClick: openExtraInformation,\n                    },\n                  ]}\n                  textSelectable\n                />\n              </SecureComponent>\n            </Grid>\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default LogsSearchMain;\n"],"names":["_ref","timeStart","setTimeStart","timeEnd","setTimeEnd","triggerSync","label","startLabel","endLabel","_jsx","Grid","item","xs","sx","display","width","border","paddingLeft","paddingRight","borderRadius","height","marginRight","color","WebkitTextFillColor","children","_jsxs","Box","alignItems","gridTemplateColumns","padding","concat","breakPoints","sm","md","gap","fontSize","fontWeight","className","customBorderPadding","DateTimeInput","value","onChange","id","secondsSelector","pickerStartComponent","Fragment","TimeIcon","justifyContent","Button","type","variant","onClick","icon","SyncIcon","LogSearchColumnLabels","time","api_name","access_key","bucket","object","remote_host","request_id","user_agent","response_status","response_status_code","request_content_length","response_content_length","time_to_response_ns","placeholder","name","flexGrow","margin","InputLabel","InputBox","val","target","modalOpen","logSearchElement","onClose","jsonItems","Object","keys","ModalWrapper","title","container","map","objectKey","index","style","textAlign","get","toString","iconComponent","entity","documentationLink","alignContent","HelpBox","help","href","rel","filtersContainer","marginBottom","LogsSearchMain","dispatch","useAppDispatch","features","useSelector","selFeatures","loading","setLoading","useState","filterOpen","setFilterOpen","records","setRecords","setBucket","apiName","setApiName","accessKey","setAccessKey","userAgent","setUserAgent","setObject","requestID","setRequestID","responseStatus","setResponseStatus","sortOrder","setSortOrder","columnsShown","setColumnsShown","nextPage","setNextPage","alreadyFetching","setAlreadyFetching","logSearchExtrasOpen","setLogSearchExtrasOpen","selectedItem","setSelectedItem","recordsResp","logSearchEnabled","includes","fetchRecords","useCallback","queryParams","trim","endsWith","slice","api","invoke","toUTC","toISO","then","res","fetchedResults","results","catch","err","setErrorSnackMessage","useEffect","setHelpName","LogSearchFullModal","closeViewExtraInformation","PageHeaderWrapper","actions","HelpMenu","PageLayout","withBorders","lg","flexFlow","DateRangeSelector","ExpandOptionsButton","open","overflowY","marginLeft","FilterInputWrapper","triggerLoad","SecureComponent","scopes","IAM_SCOPES","ADMIN_HEALTH_INFO","resource","CONSOLE_UI_RESOURCE","errorProps","disabled","DataTable","columns","elementKey","enableSort","renderFunction","element","renderFullObject","niceBytes","nsToSeconds","contentTextAlign","isLoading","entityName","customEmptyMessage","idField","columnsSelector","onColumnChange","colID","newArray","findIndex","filter","customPaperHeight","sortEnabled","currentSort","currentDirection","onSortClick","sortData","newSortDirection","infiniteScrollConfig","recordsCount","loadMoreRecords","_","Promise","resolve","itemActions","textSelectable","MissingIntegration","SearchIcon"],"sourceRoot":""}