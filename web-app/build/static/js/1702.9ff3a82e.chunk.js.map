{"version":3,"file":"static/js/1702.9ff3a82e.chunk.js","mappings":"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","sources":["screens/Console/Configurations/SiteReplication/SRSiteInputRow.tsx","screens/Console/Configurations/SiteReplication/AddReplicationSites.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { AddIcon, Box, Button, Grid, InputBox, RemoveIcon } from \"mds\";\nimport { SiteInputRow } from \"./Types\";\n\ninterface ISRSiteInputRowProps {\n  rowData: SiteInputRow;\n  rowId: number;\n  onFieldChange: (e: any, fieldName: string, index: number) => void;\n  onAddClick?: (index: number) => void;\n  onRemoveClick?: (index: number) => void;\n  canAdd?: boolean;\n  canRemove?: boolean;\n  showRowActions?: boolean;\n  disabledFields?: string[];\n  fieldErrors?: Record<string, string>;\n}\n\nconst SRSiteInputRow = ({\n  rowData,\n  rowId: index,\n  onFieldChange,\n  onAddClick,\n  onRemoveClick,\n  canAdd = true,\n  canRemove = true,\n  showRowActions = true,\n  disabledFields = [],\n  fieldErrors = {},\n}: ISRSiteInputRowProps) => {\n  const { endpoint = \"\", accessKey = \"\", secretKey = \"\", name = \"\" } = rowData;\n  return (\n    <Fragment key={`${index}`}>\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-${index}`}\n          name={`add-rep-peer-site-${index}`}\n          placeholder={`site-name`}\n          label=\"\"\n          readOnly={disabledFields.includes(\"name\")}\n          value={name}\n          onChange={(e) => {\n            onFieldChange(e, \"name\", index);\n          }}\n          data-test-id={`add-site-rep-peer-site-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-ep-${index}`}\n          name={`add-rep-peer-site-ep-${index}`}\n          placeholder={`https://dr.minio-storage:900${index}`}\n          label=\"\"\n          readOnly={disabledFields.includes(\"endpoint\")}\n          error={fieldErrors[\"endpoint\"]}\n          value={endpoint}\n          onChange={(e) => {\n            onFieldChange(e, \"endpoint\", index);\n          }}\n          data-test-id={`add-site-rep-peer-ep-${index}`}\n        />\n      </Box>\n\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-ac-${index}`}\n          name={`add-rep-peer-site-ac-${index}`}\n          label=\"\"\n          required={true}\n          disabled={disabledFields.includes(\"accessKey\")}\n          value={accessKey}\n          error={fieldErrors[\"accessKey\"]}\n          onChange={(e) => {\n            onFieldChange(e, \"accessKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-ac-${index}`}\n        />\n      </Box>\n      <Box>\n        <InputBox\n          id={`add-rep-peer-site-sk-${index}`}\n          name={`add-rep-peer-site-sk-${index}`}\n          label=\"\"\n          required={true}\n          type={\"password\"}\n          value={secretKey}\n          error={fieldErrors[\"secretKey\"]}\n          disabled={disabledFields.includes(\"secretKey\")}\n          onChange={(e) => {\n            onFieldChange(e, \"secretKey\", index);\n          }}\n          data-test-id={`add-rep-peer-site-sk-${index}`}\n        />\n      </Box>\n      <Grid item xs={12} sx={{ alignItems: \"center\", display: \"flex\" }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"baseline\",\n            marginTop: \"4px\",\n\n            \"& button\": {\n              borderColor: \"#696969\",\n              color: \"#696969\",\n              borderRadius: \"50%\",\n            },\n          }}\n        >\n          {showRowActions ? (\n            <React.Fragment>\n              <TooltipWrapper tooltip={\"Add a Row\"}>\n                <Button\n                  id={`add-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canAdd}\n                  icon={<AddIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onAddClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                  }}\n                />\n              </TooltipWrapper>\n              <TooltipWrapper tooltip={\"Remove Row\"}>\n                <Button\n                  id={`remove-row-${index}`}\n                  variant=\"regular\"\n                  disabled={!canRemove}\n                  icon={<RemoveIcon />}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveClick?.(index);\n                  }}\n                  style={{\n                    width: 25,\n                    height: 25,\n                    padding: 0,\n                    marginLeft: 8,\n                  }}\n                />\n              </TooltipWrapper>\n            </React.Fragment>\n          ) : null}\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default SRSiteInputRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  BackLink,\n  Button,\n  ClustersIcon,\n  HelpBox,\n  PageLayout,\n  Box,\n  Grid,\n  ProgressBar,\n  InputLabel,\n  SectionTitle,\n} from \"mds\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setHelpName,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selSession } from \"../../consoleSlice\";\nimport SRSiteInputRow from \"./SRSiteInputRow\";\nimport { SiteInputRow } from \"./Types\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst isValidEndPoint = (ep: string) => {\n  let isValidEndPointUrl = false;\n\n  try {\n    new URL(ep);\n    isValidEndPointUrl = true;\n  } catch (err) {\n    isValidEndPointUrl = false;\n  }\n  if (isValidEndPointUrl) {\n    return \"\";\n  } else {\n    return \"Invalid Endpoint\";\n  }\n};\n\nconst isEmptyValue = (value: string): boolean => {\n  return value?.trim() === \"\";\n};\n\nconst TableHeader = () => {\n  return (\n    <React.Fragment>\n      <Box>\n        <InputLabel>Site Name</InputLabel>\n      </Box>\n      <Box>\n        <InputLabel>Endpoint {\"*\"}</InputLabel>\n      </Box>\n      <Box>\n        <InputLabel>Access Key {\"*\"}</InputLabel>\n      </Box>\n      <Box>\n        <InputLabel>Secret Key {\"*\"}</InputLabel>\n      </Box>\n      <Box> </Box>\n    </React.Fragment>\n  );\n};\n\nconst SiteTypeHeader = ({ title }: { title: string }) => {\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          marginBottom: \"15px\",\n          fontSize: \"14px\",\n          fontWeight: 600,\n        }}\n      >\n        {title}\n      </Box>\n    </Grid>\n  );\n};\n\nconst AddReplicationSites = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { serverEndPoint = \"\" } = useSelector(selSession);\n\n  const [currentSite, setCurrentSite] = useState<SiteInputRow[]>([\n    {\n      endpoint: serverEndPoint,\n      name: \"\",\n      accessKey: \"\",\n      secretKey: \"\",\n    },\n  ]);\n\n  const [existingSites, setExistingSites] = useState<SiteInputRow[]>([]);\n\n  const setDefaultNewRows = () => {\n    const defaultNewSites = [\n      { endpoint: \"\", name: \"\", accessKey: \"\", secretKey: \"\" },\n    ];\n    setExistingSites(defaultNewSites);\n  };\n\n  const [isSiteInfoLoading, invokeSiteInfoApi] = useApi(\n    (res: any) => {\n      const { sites: siteList, name: curSiteName } = res;\n      // current site name to be the fist one.\n      const foundIdx = siteList.findIndex((el: any) => el.name === curSiteName);\n      if (foundIdx !== -1) {\n        let curSite = siteList[foundIdx];\n        curSite = {\n          ...curSite,\n          isCurrent: true,\n          isSaved: true,\n        };\n\n        setCurrentSite([curSite]);\n        siteList.splice(foundIdx, 1);\n      }\n\n      siteList.sort((x: any, y: any) => {\n        return x.name === curSiteName ? -1 : y.name === curSiteName ? 1 : 0;\n      });\n\n      let existingSiteList = siteList.map((si: any) => {\n        return {\n          ...si,\n          accessKey: \"\",\n          secretKey: \"\",\n          isSaved: true,\n        };\n      });\n\n      if (existingSiteList.length) {\n        setExistingSites(existingSiteList);\n      } else {\n        setDefaultNewRows();\n      }\n    },\n    (err: any) => {\n      setDefaultNewRows();\n    },\n  );\n\n  const getSites = () => {\n    invokeSiteInfoApi(\"GET\", `api/v1/admin/site-replication`);\n  };\n\n  useEffect(() => {\n    getSites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add-replication-sites\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const existingEndPointsValidity = existingSites.reduce(\n    (acc: string[], cv, i) => {\n      const epValue = existingSites[i].endpoint;\n      const isEpValid = isValidEndPoint(epValue);\n\n      if (isEpValid === \"\" && epValue !== \"\") {\n        acc.push(isEpValid);\n      }\n      return acc;\n    },\n    [],\n  );\n\n  const isExistingCredsValidity = existingSites\n    .map((site) => {\n      return !isEmptyValue(site.accessKey) && !isEmptyValue(site.secretKey);\n    })\n    .filter(Boolean);\n\n  const { accessKey: cAccessKey, secretKey: cSecretKey } = currentSite[0];\n\n  const isCurCredsValid =\n    !isEmptyValue(cAccessKey) && !isEmptyValue(cSecretKey);\n  const peerEndpointsValid =\n    existingEndPointsValidity.length === existingSites.length;\n  const peerCredsValid =\n    isExistingCredsValidity.length === existingSites.length;\n\n  let isAllFieldsValid =\n    isCurCredsValid && peerEndpointsValid && peerCredsValid;\n\n  const [isAdding, invokeSiteAddApi] = useApi(\n    (res: any) => {\n      if (res.success) {\n        dispatch(setSnackBarMessage(res.status));\n        resetForm();\n        getSites();\n        navigate(IAM_PAGES.SITE_REPLICATION);\n      } else {\n        dispatch(\n          setErrorSnackMessage({\n            errorMessage: \"Error\",\n            detailedError: res.status,\n          }),\n        );\n      }\n    },\n    (err: any) => {\n      dispatch(setErrorSnackMessage(err));\n    },\n  );\n\n  const resetForm = () => {\n    setDefaultNewRows();\n    setCurrentSite((prevItems) => {\n      return prevItems.map((item, ix) => ({\n        ...item,\n        accessKey: \"\",\n        secretKey: \"\",\n        name: \"\",\n      }));\n    });\n  };\n\n  const addSiteReplication = () => {\n    const curSite: any[] = currentSite?.map((es, idx) => {\n      return {\n        accessKey: es.accessKey,\n        secretKey: es.secretKey,\n        name: es.name,\n        endpoint: es.endpoint.trim(),\n      };\n    });\n\n    const newOrExistingSitesToAdd = existingSites.reduce(\n      (acc: any, ns, idx) => {\n        if (ns.endpoint) {\n          acc.push({\n            accessKey: ns.accessKey,\n            secretKey: ns.secretKey,\n            name: ns.name || `dr-site-${idx}`,\n            endpoint: ns.endpoint.trim(),\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n\n    const sitesToAdd = curSite.concat(newOrExistingSitesToAdd);\n\n    invokeSiteAddApi(\"POST\", `api/v1/admin/site-replication`, sitesToAdd);\n  };\n\n  const renderCurrentSite = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"15px\",\n        }}\n      >\n        <SiteTypeHeader title={\"This Site\"} />\n        <Box\n          withBorders\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {currentSite.map((cs, index) => {\n            const accessKeyError = isEmptyValue(cs.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(cs.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n            return (\n              <SRSiteInputRow\n                key={`current-${index}`}\n                rowData={cs}\n                rowId={index}\n                fieldErrors={{\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  if (fieldName !== \"\") {\n                    setCurrentSite((prevItems) => {\n                      return prevItems.map((item, ix) =>\n                        ix === index\n                          ? { ...item, [fieldName]: filedValue }\n                          : item,\n                      );\n                    });\n                  }\n                }}\n                showRowActions={false}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  const renderPeerSites = () => {\n    return (\n      <Box\n        sx={{\n          marginTop: \"25px\",\n        }}\n      >\n        <SiteTypeHeader title={\"Peer Sites\"} />\n        <Box\n          withBorders\n          sx={{\n            display: \"grid\",\n            gridTemplateColumns: \".8fr 1.2fr .8fr .8fr .2fr\",\n            padding: \"15px\",\n            gap: \"10px\",\n            maxHeight: \"430px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <TableHeader />\n\n          {existingSites.map((ps, index) => {\n            const endPointError = isValidEndPoint(ps.endpoint);\n\n            const accessKeyError = isEmptyValue(ps.accessKey)\n              ? \"AccessKey is required\"\n              : \"\";\n            const secretKeyError = isEmptyValue(ps.secretKey)\n              ? \"SecretKey is required\"\n              : \"\";\n\n            return (\n              <SRSiteInputRow\n                key={`exiting-${index}`}\n                rowData={ps}\n                rowId={index}\n                fieldErrors={{\n                  endpoint: endPointError,\n                  accessKey: accessKeyError,\n                  secretKey: secretKeyError,\n                }}\n                onFieldChange={(e, fieldName, index) => {\n                  const filedValue = e.target.value;\n                  setExistingSites((prevItems) => {\n                    return prevItems.map((item, ix) =>\n                      ix === index\n                        ? { ...item, [fieldName]: filedValue }\n                        : item,\n                    );\n                  });\n                }}\n                canAdd={true}\n                canRemove={index > 0 && !ps.isSaved}\n                onAddClick={() => {\n                  const newRows = [...existingSites];\n                  //add at the next index\n                  newRows.splice(index + 1, 0, {\n                    name: \"\",\n                    endpoint: \"\",\n                    accessKey: \"\",\n                    secretKey: \"\",\n                  });\n\n                  setExistingSites(newRows);\n                }}\n                onRemoveClick={(index) => {\n                  setExistingSites(\n                    existingSites.filter((_, idx) => idx !== index),\n                  );\n                }}\n              />\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Add Replication Site\"}\n            onClick={() => navigate(IAM_PAGES.SITE_REPLICATION)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <Box\n          sx={{\n            display: \"grid\",\n            padding: \"25px\",\n            gap: \"25px\",\n            gridTemplateColumns: \"1fr\",\n            border: \"1px solid #eaeaea\",\n          }}\n        >\n          <Box>\n            <SectionTitle separator icon={<ClustersIcon />}>\n              Add Sites for Replication\n            </SectionTitle>\n\n            {isSiteInfoLoading || isAdding ? <ProgressBar /> : null}\n\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                fontStyle: \"italic\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Note: AccessKey and SecretKey values for every site is required\n              while adding or editing peer sites\n            </Box>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                return addSiteReplication();\n              }}\n            >\n              {renderCurrentSite()}\n\n              {renderPeerSites()}\n\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <Button\n                    id={\"clear\"}\n                    type=\"button\"\n                    variant=\"regular\"\n                    disabled={isAdding}\n                    onClick={resetForm}\n                    label={\"Clear\"}\n                  />\n\n                  <Button\n                    id={\"save\"}\n                    type=\"submit\"\n                    variant=\"callAction\"\n                    disabled={isAdding || !isAllFieldsValid}\n                    label={\"Save\"}\n                  />\n                </Box>\n              </Grid>\n            </form>\n          </Box>\n\n          <HelpBox\n            title={\"\"}\n            iconComponent={null}\n            help={\n              <Fragment>\n                <Box\n                  sx={{\n                    marginTop: \"-25px\",\n                    fontSize: \"16px\",\n                    fontWeight: 600,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    padding: \"2px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"#07193E\",\n                      height: \"15px\",\n                      width: \"15px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderRadius: \"50%\",\n                      marginRight: \"18px\",\n                      padding: \"3px\",\n                      paddingLeft: \"2px\",\n                      \"& .min-icon\": {\n                        height: \"11px\",\n                        width: \"11px\",\n                        fill: \"#ffffff\",\n                      },\n                    }}\n                  >\n                    <ClustersIcon />\n                  </Box>\n                  About Site Replication\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexFlow: \"column\",\n                    fontSize: \"14px\",\n                    flex: \"2\",\n                    \"& li\": {\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      marginTop: \"15px\",\n                      marginBottom: \"15px\",\n                      width: \"100%\",\n\n                      \"&.step-text\": {\n                        fontWeight: 400,\n                      },\n                    },\n                  }}\n                >\n                  <Box>\n                    The following changes are replicated to all other sites\n                  </Box>\n                  <ul>\n                    <li>Creation and deletion of buckets and objects</li>\n                    <li>\n                      Creation and deletion of all IAM users, groups, policies\n                      and their mappings to users or groups\n                    </li>\n                    <li>Creation of STS credentials</li>\n                    <li>\n                      Creation and deletion of service accounts (except those\n                      owned by the root user)\n                    </li>\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          Changes to Bucket features such as\n                        </div>\n                        <ul>\n                          <li>Bucket Policies</li>\n                          <li>Bucket Tags</li>\n                          <li>Bucket Object-Lock configurations</li>\n                          <li>Bucket Encryption configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n\n                    <li>\n                      <Box\n                        style={{\n                          display: \"flex\",\n                          flexFlow: \"column\",\n\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            paddingTop: \"1px\",\n                          }}\n                        >\n                          The following Bucket features will NOT be replicated\n                        </div>\n\n                        <ul>\n                          <li>Bucket notification configuration</li>\n                          <li>Bucket lifecycle (ILM) configuration</li>\n                        </ul>\n                      </Box>\n                    </li>\n                  </ul>\n                </Box>\n              </Fragment>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddReplicationSites;\n"],"names":["_ref","rowData","rowId","index","onFieldChange","onAddClick","onRemoveClick","canAdd","canRemove","showRowActions","disabledFields","fieldErrors","endpoint","accessKey","secretKey","name","_jsxs","Fragment","children","_jsx","Box","InputBox","id","concat","placeholder","label","readOnly","includes","value","onChange","e","error","required","disabled","type","Grid","item","xs","sx","alignItems","display","justifyContent","alignSelf","marginTop","borderColor","color","borderRadius","React","TooltipWrapper","tooltip","Button","variant","icon","AddIcon","onClick","preventDefault","style","width","height","padding","RemoveIcon","marginLeft","isValidEndPoint","ep","isValidEndPointUrl","URL","err","isEmptyValue","trim","TableHeader","InputLabel","SiteTypeHeader","title","marginBottom","fontSize","fontWeight","AddReplicationSites","dispatch","useAppDispatch","navigate","useNavigate","serverEndPoint","useSelector","selSession","currentSite","setCurrentSite","useState","existingSites","setExistingSites","setDefaultNewRows","isSiteInfoLoading","invokeSiteInfoApi","useApi","res","sites","siteList","curSiteName","foundIdx","findIndex","el","curSite","isCurrent","isSaved","splice","sort","x","y","existingSiteList","map","si","length","getSites","useEffect","setHelpName","existingEndPointsValidity","reduce","acc","cv","i","epValue","isEpValid","push","isExistingCredsValidity","site","filter","Boolean","cAccessKey","cSecretKey","isCurCredsValid","peerEndpointsValid","peerCredsValid","isAllFieldsValid","isAdding","invokeSiteAddApi","success","setSnackBarMessage","status","resetForm","IAM_PAGES","SITE_REPLICATION","setErrorSnackMessage","errorMessage","detailedError","prevItems","ix","PageHeaderWrapper","BackLink","actions","HelpMenu","PageLayout","gap","gridTemplateColumns","border","SectionTitle","separator","ClustersIcon","ProgressBar","fontStyle","noValidate","autoComplete","onSubmit","addSiteReplication","es","idx","newOrExistingSitesToAdd","ns","sitesToAdd","withBorders","maxHeight","overflowY","cs","accessKeyError","secretKeyError","SRSiteInputRow","fieldName","filedValue","target","ps","endPointError","newRows","_","HelpBox","iconComponent","help","backgroundColor","marginRight","paddingLeft","fill","flexFlow","flex","paddingTop"],"sourceRoot":""}